name: "Setup End2End environment"
description: "installation of dependencies"

runs:
  using: composite
  steps:
    - name: Cache deb packages
      id: cache-deb
      uses: actions/cache@v3
      with:
        path: ~/deb_cache
        key: ${{ runner.os }}-deb-${{ hashFiles('.github/actions/install-end2end-dependencies/action.yaml') }}
        restore-keys: |
          ${{ runner.os }}-deb-
    - name: Install dependencies
      shell: bash
      run: |-
          function run_install_commands() {
            if [ -d "$HOME/deb_cache" ]; then
              sudo cp -R "$HOME/deb_cache/." /var/cache/apt/archives/
            fi

            sudo apt-get update
            sudo apt-get install -y \
              apt-transport-https \
              ca-certificates \
              curl \
              git \
              gnupg-agent \
              gnupg2 \
              software-properties-common \
              m4 \
              gettext-base \
              jq \
              wget
              
            if [ ! -d "$HOME/deb_cache" ]; then
              mkdir -p "$HOME/deb_cache"
              sudo cp -R /var/cache/apt/archives/*.deb "$HOME/deb_cache"
            fi
          }

          set -exu;
          if ! run_install_commands; then
            echo "Switching to archive.ubuntu.com"
            sudo sed -i 's/azure\.//' /etc/apt/sources.list
            run_install_commands
          fi
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    - name: Install kind
      uses: helm/kind-action@v1.5.0
      with:
        install_only: true
        version: ${{ env.KIND_VERSION }}
    - name: Install k8s tools
      uses: yokawasa/action-setup-kube-tools@v0.9.3
      with:
        setup-tools: |
          helm
          kubectl
          kustomize
          tilt
          yq
        helm: ${{ env.HELM_VERSION }}
        kubectl: ${{ env.KUBECTL_VERSION }}
        kustomize: ${{ env.KUSTOMIZE_VERSION }}
        tilt: ${{ env.TILT_VERSION }}
        yq: ${{ env.YQ_VERSION }}
