{{- if .Values.blobserver.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "blobserver.fullname" . }}
  labels:
    app: {{ template "blobserver.name" . }}
    chart: {{ template "opal.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ template "blobserver.replicaFactor" . }}
  selector:
    matchLabels:
      app: {{ template "blobserver.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- if .Values.proxy.https }}
        checksum/config: {{ include (print $.Template.BasePath "/certificate.yaml") . | sha256sum }}
        {{- end }}
        {{- if not .Values.global.orbit.enabled }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/config: {{ include (print $.Template.BasePath "/accounts.yaml") . | sha256sum }}
        {{- end }}
      labels:
        app: {{ template "blobserver.name" . }}
        release: {{ .Release.Name }}
    spec:
      # no offline mode
      {{- if .Values.blobserver.image.imagePullSecret }}
      imagePullSecrets:
        - name: {{ .Values.blobserver.image.imagePullSecret }}
      {{- end }}
      containers:
        - name: blobserver
          image: "{{ .Values.blobserver.image.repository }}:{{ .Values.blobserver.image.tag }}"
          imagePullPolicy: {{ .Values.blobserver.image.pullPolicy }}
          terminationMessagePolicy: FallbackToLogsOnError
          ports:
            - name: http
              containerPort: 8001
          env:
            {{- include "blobserver.env" . | indent 12 }}
            {{- if .Values.global.orbit.enabled }}
            - name: MANAGEMENT_MODE
              value: "{{- .Values.global.orbit.workerMode -}}"
            - name: PUSH_STATS
              value: "false"
            {{- end }}
            {{- range $key, $value := .Values.blobserver.env }}
            - name: {{ $key | upper | replace "." "_" }}
              value: {{ $value | quote }}
            {{- end }}
          args: ['yarn', 'start']
          livenessProbe:
            tcpSocket:
              port: http
              initialDelaySeconds: 15
              periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /_/healthcheck/deep
              port: http
          startupProbe:
            tcpSocket:
              port: http
            failureThreshold: 30
            periodSeconds: 20
          volumeMounts:
            {{- if .Values.proxy.caCert }}
            - name: proxy-cert
              mountPath: "/ssl"
              readOnly: true
            {{- end }}
            {{- if .Values.kmip.enabled }}
            - name:  kip-cert
              mountPath: "/ssl-kmip"
              readOnly: true
            {{- end }}
          resources:
{{ toYaml .Values.blobserver.resources | indent 12 }}
    {{- with .Values.blobserver.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
      affinity:
{{ tpl .Values.blobserver.affinity . | indent 8 }}
    {{- with .Values.blobserver.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if or .Values.proxy.caCert .Values.kmip.enabled -}}
      volumes:
        {{- if .Values.proxy.caCert }}
        - name: proxy-cert
          secret:
            secretName: {{ template "opal.fullname" . }}-proxy-cert
        {{- end }}
        {{- if .Values.kmip.enabled }}
        - name: kmip-cert
          secret:
            secretName: {{ template "opal.fullname" . }}-kmip-cert
        {{- end }}
{{- end }}
{{- end }}
