{{- if .Values.global.orbit.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "backbeat.fullname" . }}-lifecycle-bucket-processor
  labels:
    app: {{ template "backbeat.name" . }}-lifecycle
    chart: {{ template "backbeat.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.lifecycle.bucketProcessor.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "backbeat.name" . }}-lifecycle
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "backbeat.name" . }}-lifecycle
        release: {{ .Release.Name }}
      annotations:
{{ toYaml .Values.monitoring.annotations | indent 8 }}
    spec:
      containers:
        - name: bucket-processor
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          terminationMessagePolicy: FallbackToLogsOnError
          command: ["/usr/src/app/docker-entrypoint.sh"]
          args: ["npm", "run", "lifecycle_bucket_processor"]
          env:
            - name: ZOOKEEPER_AUTO_CREATE_NAMESPACE
              value: "1"
            - name: ZOOKEEPER_CONNECTION_STRING
              value: "{{- printf "%s-zenko-quorum:2181" .Release.Name | trunc 63 | trimSuffix "-" -}}"
            - name: KAFKA_HOSTS
              value: "{{- printf "%s-zenko-queue:9092" .Release.Name | trunc 63 | trimSuffix "-" -}}"
            - name: MONGODB_HOSTS
              value: "{{ template "backbeat.mongodb-hosts" . }}"
            - name: CLOUDSERVER_HOST
              value: "{{- printf "%s-cloudserver" .Release.Name | trunc 63 | trimSuffix "-" -}}"
            - name: CLOUDSERVER_PORT
              value: "80"
            - name: LOG_LEVEL
              value: {{ .Values.logging.level }}
            - name: COLLECT_DEFAULT_METRICS_INTERVAL_MS
              value: {{ quote .Values.monitoring.collectDefaultMetricsIntervalMs }}
            - name: KAFKA_BACKLOG_METRICS_ZKPATH
              value: "{{ .Values.kafka.backlog_metrics.path }}"
            - name: KAFKA_BACKLOG_METRICS_INTERVALS
              value: "{{ .Values.kafka.backlog_metrics.interval }}"
            - name: EXTENSIONS_LIFECYCLE_AUTH_TYPE
              value: service
            - name: EXTENSIONS_LIFECYCLE_AUTH_ACCOUNT
              value: service-lifecycle
            - name: EXTENSIONS_LIFECYCLE_ZOOKEEPER_PATH
              value: "{{ .Values.lifecycle.zookeeper.path }}"
            - name: EXTENSIONS_LIFECYCLE_BUCKET_TASK_TOPIC
              value: backbeat-lifecycle-bucket-tasks
            - name: EXTENSIONS_LIFECYCLE_OBJECT_TASK_TOPIC
              value: backbeat-lifecycle-object-tasks
            - name: EXTENSIONS_LIFECYCLE_BUCKET_PROCESSOR_GROUP_ID
              value: "{{ .Values.lifecycle.bucketProcessor.group }}"
            - name: EXTENSIONS_LIFECYCLE_RULES_EXPIRATION_ENABLED
              value: "{{ .Values.lifecycle.rules.expiration.enabled }}"
            - name: EXTENSIONS_LIFECYCLE_RULES_NC_VERSION_EXPIRATION_ENABLED
              value: "{{ .Values.lifecycle.rules.noncurrentVersionExpiration.enabled }}"
            - name: EXTENSIONS_LIFECYCLE_RULES_ABORT_INCOMPLETE_MPU_ENABLED
              value: "{{ .Values.lifecycle.rules.abortIncompleteMPU.enabled }}"
          livenessProbe:
            httpGet:
              path: {{ .Values.health.path.liveness}}
              port: {{ .Values.health.port }}
          resources:
{{ toYaml .Values.lifecycle.bucketProcessor.resources | indent 12 }}
    {{- with .Values.lifecycle.bucketProcessor.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.lifecycle.bucketProcessor.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.lifecycle.bucketProcessor.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- end -}}
