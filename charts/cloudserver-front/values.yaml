# Default values for cloudserver-front.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

ci:
  enabled: false
  orbit_ns: ciutil

orbit:
  enabled: true
  endpoint: https://api.zenko.io
# When 'orbit.enabled' is 'true', these aren't used, please use
# https://zenko.io to manage your deployment
endpoint: zenko.local
credentials:
  keyId: deployment-specific-access-key
  secretKey: deployment-specific-secret-key

logging:
   # Options: info, debug, trace
   level: info

allowHealthchecksFrom: '0.0.0.0/0'

mongodb:
  enabled: true
  replicaSet: rs0

replicaCount: 1

image:
  repository: zenko/cloudserver
  tag: 0.2.3
  pullPolicy: IfNotPresent

proxy:
  # If you want to use an HTTP proxy, add the respective endpoints after
  # 'http:' and/or 'https:'. If the HTTP proxy endpoint is set but the HTTPS
  # one isn't, the HTTP proxy will be used for HTTPS traffic as well.
  http: ""
  https: ""

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  # This must match 'endpoint', unless your client supports different
  # hostnames.
  hosts:
    - zenko.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

autoscaling:
  enabled: false
  config:
    minReplicas: 1
    maxReplicas: 16
    # Note: when setting this, a `resources.request.cpu` is required. You
    # likely want to set it to `1` or some lower value.
    targetCPUUtilizationPercentage: 80
