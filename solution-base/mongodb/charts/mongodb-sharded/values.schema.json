{
    "title": "Chart Values",
    "type": "object",
    "properties": {
        "global": {
            "type": "object",
            "properties": {
                "imageRegistry": {
                    "type": "string",
                    "description": "Global Docker image registry",
                    "default": ""
                },
                "imagePullSecrets": {
                    "type": "array",
                    "description": "Global Docker registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "storageClass": {
                    "type": "string",
                    "description": "Global storage class for dynamic provisioning",
                    "default": ""
                }
            }
        },
        "kubeVersion": {
            "type": "string",
            "description": "Override Kubernetes version",
            "default": ""
        },
        "nameOverride": {
            "type": "string",
            "description": "String to partially override common.names.name",
            "default": ""
        },
        "fullnameOverride": {
            "type": "string",
            "description": "String to fully override common.names.fullname",
            "default": ""
        },
        "namespaceOverride": {
            "type": "string",
            "description": "String to fully override common.names.namespace",
            "default": ""
        },
        "commonLabels": {
            "type": "object",
            "description": "Labels to add to all deployed objects",
            "default": {}
        },
        "commonAnnotations": {
            "type": "object",
            "description": "Annotations to add to all deployed objects",
            "default": {}
        },
        "clusterDomain": {
            "type": "string",
            "description": "Kubernetes cluster domain name",
            "default": "cluster.local"
        },
        "extraDeploy": {
            "type": "array",
            "description": "Array of extra objects to deploy with the release",
            "default": [],
            "items": {}
        },
        "diagnosticMode": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable diagnostic mode (all probes will be disabled and the command will be overridden)",
                    "default": false
                },
                "command": {
                    "type": "array",
                    "description": "Command to override all containers in the deployment",
                    "default": [
                        "sleep"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Args to override all containers in the deployment",
                    "default": [
                        "infinity"
                    ],
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "image": {
            "type": "object",
            "properties": {
                "registry": {
                    "type": "string",
                    "description": "MongoDB(&reg;) Sharded image registry",
                    "default": "docker.io"
                },
                "repository": {
                    "type": "string",
                    "description": "MongoDB(&reg;) Sharded Image name",
                    "default": "bitnami/mongodb-sharded"
                },
                "tag": {
                    "type": "string",
                    "description": "MongoDB(&reg;) Sharded image tag (immutable tags are recommended)",
                    "default": "6.0.9-debian-11-r0"
                },
                "digest": {
                    "type": "string",
                    "description": "MongoDB(&reg;) Sharded image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                    "default": ""
                },
                "pullPolicy": {
                    "type": "string",
                    "description": "MongoDB(&reg;) Sharded image pull policy",
                    "default": "IfNotPresent"
                },
                "pullSecrets": {
                    "type": "array",
                    "description": "Specify docker-registry secret names as an array",
                    "default": [],
                    "items": {}
                },
                "debug": {
                    "type": "boolean",
                    "description": "Specify if debug logs should be enabled",
                    "default": false
                }
            }
        },
        "auth": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable authentication",
                    "default": true
                },
                "rootUser": {
                    "type": "string",
                    "description": "MongoDB(&reg;) root user",
                    "default": "root"
                },
                "rootPassword": {
                    "type": "string",
                    "description": "MongoDB(&reg;) root password",
                    "default": ""
                },
                "replicaSetKey": {
                    "type": "string",
                    "description": "Key used for authentication in the replicaset (only when `architecture=replicaset`)",
                    "default": ""
                },
                "existingSecret": {
                    "type": "string",
                    "description": "Existing secret with MongoDB(&reg;) credentials (keys: `mongodb-password`, `mongodb-root-password`, `mongodb-replica-set-key`)",
                    "default": ""
                },
                "usePasswordFile": {
                    "type": "boolean",
                    "description": "Mount credentials as files instead of using environment variables",
                    "default": false
                }
            }
        },
        "shards": {
            "type": "number",
            "description": "Number of shards to be created",
            "default": 2
        },
        "common": {
            "type": "object",
            "properties": {
                "mongodbEnableNumactl": {
                    "type": "boolean",
                    "description": "Enable launch MongoDB instance prefixed with \"numactl --interleave=all\"",
                    "default": false
                },
                "useHostnames": {
                    "type": "boolean",
                    "description": "Enable DNS hostnames in the replica set config",
                    "default": true
                },
                "mongodbEnableIPv6": {
                    "type": "boolean",
                    "description": "Switch to enable/disable IPv6 on MongoDB&reg;",
                    "default": false
                },
                "mongodbDirectoryPerDB": {
                    "type": "boolean",
                    "description": "Switch to enable/disable DirectoryPerDB on MongoDB&reg;",
                    "default": false
                },
                "mongodbSystemLogVerbosity": {
                    "type": "number",
                    "description": "MongoDB&reg; system log verbosity level",
                    "default": 0
                },
                "mongodbDisableSystemLog": {
                    "type": "boolean",
                    "description": "Whether to disable MongoDB&reg; system log or not",
                    "default": false
                },
                "mongodbMaxWaitTimeout": {
                    "type": "number",
                    "description": "Maximum time (in seconds) for MongoDB&reg; nodes to wait for another MongoDB&reg; node to be ready",
                    "default": 120
                },
                "initScriptsCM": {
                    "type": "string",
                    "description": "Configmap with init scripts to execute",
                    "default": ""
                },
                "initScriptsSecret": {
                    "type": "string",
                    "description": "Secret with init scripts to execute (for sensitive data)",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "An array to add extra env vars",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of a ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of a Secret containing extra env vars",
                    "default": ""
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add sidecars to the pod",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add init containers to the pod",
                    "default": [],
                    "items": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Array to add extra volumes",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Array to add extra mounts (normally used with extraVolumes)",
                    "default": [],
                    "items": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "mongodb": {
                            "type": "number",
                            "description": "MongoDB container port",
                            "default": 27017
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Whether to create a Service Account for all pods automatically",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of a Service Account to be used by all Pods",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional Service Account annotations (evaluated as a template)",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        }
                    }
                }
            }
        },
        "volumePermissions": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work)",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "Init container volume-permissions image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "Init container volume-permissions image name",
                            "default": "bitnami/os-shell"
                        },
                        "tag": {
                            "type": "string",
                            "description": "Init container volume-permissions image tag",
                            "default": "11-debian-11-r45"
                        },
                        "digest": {
                            "type": "string",
                            "description": "Init container volume-permissions image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "Init container volume-permissions image pull policy",
                            "default": "IfNotPresent"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "Init container volume-permissions image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "resources": {
                    "type": "object",
                    "description": "Init container resource requests/limit",
                    "default": {}
                }
            }
        },
        "service": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Specify an explicit service name",
                    "default": ""
                },
                "annotations": {
                    "type": "object",
                    "description": "Additional service annotations (evaluate as a template)",
                    "default": {}
                },
                "type": {
                    "type": "string",
                    "description": "Service type",
                    "default": "ClusterIP"
                },
                "externalTrafficPolicy": {
                    "type": "string",
                    "description": "External traffic policy",
                    "default": "Cluster"
                },
                "ports": {
                    "type": "object",
                    "properties": {
                        "mongodb": {
                            "type": "number",
                            "description": "MongoDB&reg; service port",
                            "default": 27017
                        }
                    }
                },
                "clusterIP": {
                    "type": "string",
                    "description": "Static clusterIP or None for headless services",
                    "default": ""
                },
                "nodePorts": {
                    "type": "object",
                    "properties": {
                        "mongodb": {
                            "type": "string",
                            "description": "Specify the nodePort value for the LoadBalancer and NodePort service types.",
                            "default": ""
                        }
                    }
                },
                "externalIPs": {
                    "type": "array",
                    "description": "External IP list to use with ClusterIP service type",
                    "default": [],
                    "items": {}
                },
                "loadBalancerIP": {
                    "type": "string",
                    "description": "Static IP Address to use for LoadBalancer service type",
                    "default": ""
                },
                "loadBalancerSourceRanges": {
                    "type": "array",
                    "description": "List of IP ranges allowed access to load balancer (if supported)",
                    "default": [],
                    "items": {}
                },
                "extraPorts": {
                    "type": "array",
                    "description": "Extra ports to expose (normally used with the `sidecar` value)",
                    "default": [],
                    "items": {}
                },
                "sessionAffinity": {
                    "type": "string",
                    "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                    "default": "None"
                },
                "sessionAffinityConfig": {
                    "type": "object",
                    "description": "Additional settings for the sessionAffinity",
                    "default": {}
                },
                "headless": {
                    "type": "object",
                    "properties": {
                        "annotations": {
                            "type": "object",
                            "description": "Annotations for the headless service.",
                            "default": {}
                        }
                    }
                }
            }
        },
        "configsvr": {
            "type": "object",
            "properties": {
                "replicaCount": {
                    "type": "number",
                    "description": "Number of nodes in the replica set (the first node will be primary)",
                    "default": 1
                },
                "resources": {
                    "type": "object",
                    "description": "Configure pod resources",
                    "default": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "mongodbExtraFlags": {
                    "type": "array",
                    "description": "MongoDB&reg; additional command line flags",
                    "default": [],
                    "items": {}
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Pod priority class name",
                    "default": ""
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Config Server Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Config Server Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Config Server Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Config Server Node label key to match Ignored if `affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Config Server Node label values to match. Ignored if `affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Config Server Affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Config Server Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Config Server Tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "Statefulset's pod management policy, allows parallel startup of pods",
                    "default": "OrderedReady"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "config": {
                    "type": "string",
                    "description": "MongoDB&reg; configuration file",
                    "default": ""
                },
                "configCM": {
                    "type": "string",
                    "description": "ConfigMap name with Config Server configuration file (cannot be used with configsvr.config)",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "An array to add extra env vars",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of a ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of a Secret containing extra env vars",
                    "default": ""
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add sidecars to the pod",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add init containers to the pod",
                    "default": [],
                    "items": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Array to add extra volumes. Requires setting `extraVolumeMounts`",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Array to add extra mounts (normally used with extraVolumes). Normally used with `extraVolumes`",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Use an alternate scheduler, e.g. \"stork\".",
                    "default": ""
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable pod disruption budget",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number of available config pods allowed (`0` to disable)",
                            "default": 0
                        },
                        "maxUnavailable": {
                            "type": "number",
                            "description": "Maximum number of unavailable config pods allowed (`0` to disable)",
                            "default": 1
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Use a PVC to persist data",
                            "default": true
                        },
                        "mountPath": {
                            "type": "string",
                            "description": "Path to mount the volume at",
                            "default": "/bitnami/mongodb"
                        },
                        "subPath": {
                            "type": "string",
                            "description": "Subdirectory of the volume to mount at (evaluated as a template)",
                            "default": ""
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Storage class of backing PVC",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Use volume as ReadOnly or ReadWrite",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "PersistentVolumeClaim size",
                            "default": "8Gi"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Persistent Volume annotations",
                            "default": {}
                        },
                        "resourcePolicy": {
                            "type": "string",
                            "description": "Setting it to \"keep\" to avoid removing PVCs during a helm delete operation. Leaving it empty will delete PVCs after the chart deleted",
                            "default": ""
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Specifies whether a ServiceAccount should be created for Config Server",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of a Service Account to be used by Config Server",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional Service Account annotations (evaluated as a template)",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        }
                    }
                },
                "external": {
                    "type": "object",
                    "properties": {
                        "host": {
                            "type": "string",
                            "description": "Primary node of an external Config Server replicaset",
                            "default": ""
                        },
                        "rootPassword": {
                            "type": "string",
                            "description": "Root password of the external Config Server replicaset",
                            "default": ""
                        },
                        "replicasetName": {
                            "type": "string",
                            "description": "Replicaset name of an external Config Server",
                            "default": ""
                        },
                        "replicasetKey": {
                            "type": "string",
                            "description": "Replicaset key of an external Config Server",
                            "default": ""
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the container",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set containers' Security Context runAsNonRoot",
                            "default": false
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [
                        "/bin/bash",
                        "/entrypoint/replicaset-entrypoint.sh"
                    ],
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Config Server container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 60
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 20
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 2
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 20
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 0
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 30
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                }
            }
        },
        "mongos": {
            "type": "object",
            "properties": {
                "replicaCount": {
                    "type": "number",
                    "description": "Number of replicas",
                    "default": 1
                },
                "resources": {
                    "type": "object",
                    "description": "Configure pod resources",
                    "default": {}
                },
                "hostAliases": {
                    "type": "array",
                    "description": "Deployment pod host aliases",
                    "default": [],
                    "items": {}
                },
                "mongodbExtraFlags": {
                    "type": "array",
                    "description": "MongoDB&reg; additional command line flags",
                    "default": [],
                    "items": {}
                },
                "topologySpreadConstraints": {
                    "type": "array",
                    "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                    "default": [],
                    "items": {}
                },
                "priorityClassName": {
                    "type": "string",
                    "description": "Pod priority class name",
                    "default": ""
                },
                "podAffinityPreset": {
                    "type": "string",
                    "description": "Mongos Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": ""
                },
                "podAntiAffinityPreset": {
                    "type": "string",
                    "description": "Mongos Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                    "default": "soft"
                },
                "nodeAffinityPreset": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "Mongos Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "key": {
                            "type": "string",
                            "description": "Mongos Node label key to match Ignored if `affinity` is set.",
                            "default": ""
                        },
                        "values": {
                            "type": "array",
                            "description": "Mongos Node label values to match. Ignored if `affinity` is set.",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "affinity": {
                    "type": "object",
                    "description": "Mongos Affinity for pod assignment",
                    "default": {}
                },
                "nodeSelector": {
                    "type": "object",
                    "description": "Mongos Node labels for pod assignment",
                    "default": {}
                },
                "tolerations": {
                    "type": "array",
                    "description": "Mongos Tolerations for pod assignment",
                    "default": [],
                    "items": {}
                },
                "podManagementPolicy": {
                    "type": "string",
                    "description": "Statefulsets pod management policy, allows parallel startup of pods",
                    "default": "OrderedReady"
                },
                "updateStrategy": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string",
                            "description": "updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets",
                            "default": "RollingUpdate"
                        }
                    }
                },
                "config": {
                    "type": "string",
                    "description": "MongoDB&reg; configuration file",
                    "default": ""
                },
                "configCM": {
                    "type": "string",
                    "description": "ConfigMap name with MongoDB&reg; configuration file (cannot be used with mongos.config)",
                    "default": ""
                },
                "extraEnvVars": {
                    "type": "array",
                    "description": "An array to add extra env vars",
                    "default": [],
                    "items": {}
                },
                "extraEnvVarsCM": {
                    "type": "string",
                    "description": "Name of a ConfigMap containing extra env vars",
                    "default": ""
                },
                "extraEnvVarsSecret": {
                    "type": "string",
                    "description": "Name of a Secret containing extra env vars",
                    "default": ""
                },
                "sidecars": {
                    "type": "array",
                    "description": "Add sidecars to the pod",
                    "default": [],
                    "items": {}
                },
                "initContainers": {
                    "type": "array",
                    "description": "Add init containers to the pod",
                    "default": [],
                    "items": {}
                },
                "podAnnotations": {
                    "type": "object",
                    "description": "Additional pod annotations",
                    "default": {}
                },
                "podLabels": {
                    "type": "object",
                    "description": "Additional pod labels",
                    "default": {}
                },
                "extraVolumes": {
                    "type": "array",
                    "description": "Array to add extra volumes. Requires setting `extraVolumeMounts`",
                    "default": [],
                    "items": {}
                },
                "extraVolumeMounts": {
                    "type": "array",
                    "description": "Array to add extra volume mounts. Normally used with `extraVolumes`.",
                    "default": [],
                    "items": {}
                },
                "schedulerName": {
                    "type": "string",
                    "description": "Use an alternate scheduler, e.g. \"stork\".",
                    "default": ""
                },
                "useStatefulSet": {
                    "type": "boolean",
                    "description": "Use StatefulSet instead of Deployment",
                    "default": false
                },
                "servicePerReplica": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create one service per mongos replica (must be used with statefulset)",
                            "default": false
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional service annotations (evaluate as a template)",
                            "default": {}
                        },
                        "type": {
                            "type": "string",
                            "description": "Service type",
                            "default": "ClusterIP"
                        },
                        "externalTrafficPolicy": {
                            "type": "string",
                            "description": "External traffic policy",
                            "default": "Cluster"
                        },
                        "port": {
                            "type": "number",
                            "description": "MongoDB&reg; service port",
                            "default": 27017
                        },
                        "clusterIPs": {
                            "type": "array",
                            "description": "Array of static clusterIPs for each MongoDB@reg; replica. Length must be the same as mongos.replicaCount",
                            "default": [],
                            "items": {}
                        },
                        "nodePorts": {
                            "type": "array",
                            "description": "Array of node ports used for each MongoDB@reg; replica. Length must be the same as mongos.replicaCount",
                            "default": [],
                            "items": {}
                        },
                        "externalIPs": {
                            "type": "array",
                            "description": "External IP list to use with ClusterIP service type",
                            "default": [],
                            "items": {}
                        },
                        "loadBalancerIPs": {
                            "type": "array",
                            "description": "Array of static IP Address to use for each replica LoadBalancer service type. Length must be the same as mongos.replicaCount",
                            "default": [],
                            "items": {}
                        },
                        "loadBalancerSourceRanges": {
                            "type": "array",
                            "description": "List of IP ranges allowed access to load balancer (if supported)",
                            "default": [],
                            "items": {}
                        },
                        "extraPorts": {
                            "type": "array",
                            "description": "Extra ports to expose (normally used with the `sidecar` value)",
                            "default": [],
                            "items": {}
                        },
                        "sessionAffinity": {
                            "type": "string",
                            "description": "Session Affinity for Kubernetes service, can be \"None\" or \"ClientIP\"",
                            "default": "None"
                        },
                        "sessionAffinityConfig": {
                            "type": "object",
                            "description": "Additional settings for the sessionAffinity",
                            "default": {}
                        }
                    }
                },
                "pdb": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Enable pod disruption budget",
                            "default": false
                        },
                        "minAvailable": {
                            "type": "number",
                            "description": "Minimum number of available mongo pods allowed (`0` to disable)",
                            "default": 0
                        },
                        "maxUnavailable": {
                            "type": "number",
                            "description": "Maximum number of unavailable mongo pods allowed (`0` to disable)",
                            "default": 1
                        }
                    }
                },
                "serviceAccount": {
                    "type": "object",
                    "properties": {
                        "create": {
                            "type": "boolean",
                            "description": "Whether to create a Service Account for mongos automatically",
                            "default": false
                        },
                        "name": {
                            "type": "string",
                            "description": "Name of a Service Account to be used by mongos",
                            "default": ""
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional Service Account annotations (evaluated as a template)",
                            "default": {}
                        },
                        "automountServiceAccountToken": {
                            "type": "boolean",
                            "description": "Automount service account token for the server service account",
                            "default": true
                        }
                    }
                },
                "podSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable security context",
                            "default": true
                        },
                        "fsGroup": {
                            "type": "number",
                            "description": "Group ID for the container",
                            "default": 1001
                        }
                    }
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set containers' Security Context runAsNonRoot",
                            "default": false
                        }
                    }
                },
                "command": {
                    "type": "array",
                    "description": "Override default container command (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "args": {
                    "type": "array",
                    "description": "Override default container args (useful when using custom images)",
                    "default": [],
                    "items": {}
                },
                "terminationGracePeriodSeconds": {
                    "type": "string",
                    "description": "Seconds Redmine pod needs to terminate gracefully",
                    "default": ""
                },
                "lifecycleHooks": {
                    "type": "object",
                    "description": "for the Mongo container(s) to automate configuration before or after startup",
                    "default": {}
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 60
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 20
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 2
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": true
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 10
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 30
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 20
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 6
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 0
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 10
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 30
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                }
            }
        },
        "shardsvr": {
            "type": "object",
            "properties": {
                "dataNode": {
                    "type": "object",
                    "properties": {
                        "replicaCount": {
                            "type": "number",
                            "description": "Number of nodes in each shard replica set (the first node will be primary)",
                            "default": 1
                        },
                        "resources": {
                            "type": "object",
                            "description": "Configure pod resources",
                            "default": {}
                        },
                        "mongodbExtraFlags": {
                            "type": "array",
                            "description": "MongoDB&reg; additional command line flags",
                            "default": [],
                            "items": {}
                        },
                        "topologySpreadConstraints": {
                            "type": "array",
                            "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                            "default": [],
                            "items": {}
                        },
                        "priorityClassName": {
                            "type": "string",
                            "description": "Pod priority class name",
                            "default": ""
                        },
                        "podAffinityPreset": {
                            "type": "string",
                            "description": "Data nodes Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "podAntiAffinityPreset": {
                            "type": "string",
                            "description": "Data nodes Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": "soft"
                        },
                        "nodeAffinityPreset": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Data nodes Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                                    "default": ""
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Data nodes Node label key to match Ignored if `affinity` is set.",
                                    "default": ""
                                },
                                "values": {
                                    "type": "array",
                                    "description": "Data nodes Node label values to match. Ignored if `affinity` is set.",
                                    "default": [],
                                    "items": {}
                                }
                            }
                        },
                        "affinity": {
                            "type": "object",
                            "description": "Data nodes Affinity for pod assignment",
                            "default": {}
                        },
                        "nodeSelector": {
                            "type": "object",
                            "description": "Data nodes Node labels for pod assignment",
                            "default": {}
                        },
                        "tolerations": {
                            "type": "array",
                            "description": "Data nodes Tolerations for pod assignment",
                            "default": [],
                            "items": {}
                        },
                        "podManagementPolicy": {
                            "type": "string",
                            "description": "podManagementPolicy for the statefulset, allows parallel startup of pods",
                            "default": "OrderedReady"
                        },
                        "updateStrategy": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets",
                                    "default": "RollingUpdate"
                                }
                            }
                        },
                        "hostAliases": {
                            "type": "array",
                            "description": "Deployment pod host aliases",
                            "default": [],
                            "items": {}
                        },
                        "config": {
                            "type": "string",
                            "description": "Entries for the MongoDB&reg; config file",
                            "default": ""
                        },
                        "configCM": {
                            "type": "string",
                            "description": "ConfigMap name with MongoDB&reg; configuration (cannot be used with shardsvr.dataNode.config)",
                            "default": ""
                        },
                        "extraEnvVars": {
                            "type": "array",
                            "description": "An array to add extra env vars",
                            "default": [],
                            "items": {}
                        },
                        "extraEnvVarsCM": {
                            "type": "string",
                            "description": "Name of a ConfigMap containing extra env vars",
                            "default": ""
                        },
                        "extraEnvVarsSecret": {
                            "type": "string",
                            "description": "Name of a Secret containing extra env vars",
                            "default": ""
                        },
                        "sidecars": {
                            "type": "array",
                            "description": "Attach additional containers (evaluated as a template)",
                            "default": [],
                            "items": {}
                        },
                        "initContainers": {
                            "type": "array",
                            "description": "Add init containers to the pod",
                            "default": [],
                            "items": {}
                        },
                        "podAnnotations": {
                            "type": "object",
                            "description": "Additional pod annotations",
                            "default": {}
                        },
                        "podLabels": {
                            "type": "object",
                            "description": "Additional pod labels",
                            "default": {}
                        },
                        "extraVolumes": {
                            "type": "array",
                            "description": "Array to add extra volumes. Requires setting `extraVolumeMounts`",
                            "default": [],
                            "items": {}
                        },
                        "extraVolumeMounts": {
                            "type": "array",
                            "description": "Array to add extra mounts. Normally used with `extraVolumes`",
                            "default": [],
                            "items": {}
                        },
                        "schedulerName": {
                            "type": "string",
                            "description": "Use an alternate scheduler, e.g. \"stork\".",
                            "default": ""
                        },
                        "pdb": {
                            "type": "object",
                            "properties": {
                                "create": {
                                    "type": "boolean",
                                    "description": "Enable pod disruption budget",
                                    "default": false
                                },
                                "minAvailable": {
                                    "type": "number",
                                    "description": "Minimum number of available data pods allowed (`0` to disable)",
                                    "default": 0
                                },
                                "maxUnavailable": {
                                    "type": "number",
                                    "description": "Maximum number of unavailable data pods allowed (`0` to disable)",
                                    "default": 1
                                }
                            }
                        },
                        "serviceAccount": {
                            "type": "object",
                            "properties": {
                                "create": {
                                    "type": "boolean",
                                    "description": "Specifies whether a ServiceAccount should be created for shardsvr",
                                    "default": false
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of a Service Account to be used by shardsvr data pods",
                                    "default": ""
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional Service Account annotations (evaluated as a template)",
                                    "default": {}
                                },
                                "automountServiceAccountToken": {
                                    "type": "boolean",
                                    "description": "Automount service account token for the server service account",
                                    "default": true
                                }
                            }
                        },
                        "podSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable security context",
                                    "default": true
                                },
                                "fsGroup": {
                                    "type": "number",
                                    "description": "Group ID for the container",
                                    "default": 1001
                                }
                            }
                        },
                        "containerSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enabled containers' Security Context",
                                    "default": true
                                },
                                "runAsUser": {
                                    "type": "number",
                                    "description": "Set containers' Security Context runAsUser",
                                    "default": 1001
                                },
                                "runAsNonRoot": {
                                    "type": "boolean",
                                    "description": "Set containers' Security Context runAsNonRoot",
                                    "default": true
                                },
                                "readOnlyRootFilesystem": {
                                    "type": "boolean",
                                    "description": "Set containers' Security Context runAsNonRoot",
                                    "default": false
                                }
                            }
                        },
                        "command": {
                            "type": "array",
                            "description": "Override default container command (useful when using custom images)",
                            "default": [
                                "/bin/bash",
                                "/entrypoint/replicaset-entrypoint.sh"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "args": {
                            "type": "array",
                            "description": "Override default container args (useful when using custom images)",
                            "default": [],
                            "items": {}
                        },
                        "terminationGracePeriodSeconds": {
                            "type": "string",
                            "description": "Seconds Redmine pod needs to terminate gracefully",
                            "default": ""
                        },
                        "lifecycleHooks": {
                            "type": "object",
                            "description": "for the Data container(s) to automate configuration before or after startup",
                            "default": {}
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable livenessProbe",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for livenessProbe",
                                    "default": 60
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for livenessProbe",
                                    "default": 30
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for livenessProbe",
                                    "default": 20
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for livenessProbe",
                                    "default": 2
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for livenessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "readinessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable readinessProbe",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for readinessProbe",
                                    "default": 10
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for readinessProbe",
                                    "default": 30
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for readinessProbe",
                                    "default": 20
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for readinessProbe",
                                    "default": 6
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for readinessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "startupProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable startupProbe",
                                    "default": false
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for startupProbe",
                                    "default": 0
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for startupProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for startupProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for startupProbe",
                                    "default": 30
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for startupProbe",
                                    "default": 1
                                }
                            }
                        },
                        "customLivenessProbe": {
                            "type": "object",
                            "description": "Custom livenessProbe that overrides the default one",
                            "default": {}
                        },
                        "customReadinessProbe": {
                            "type": "object",
                            "description": "Custom readinessProbe that overrides the default one",
                            "default": {}
                        },
                        "customStartupProbe": {
                            "type": "object",
                            "description": "Custom startupProbe that overrides the default one",
                            "default": {}
                        }
                    }
                },
                "persistence": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Use a PVC to persist data",
                            "default": true
                        },
                        "mountPath": {
                            "type": "string",
                            "description": "The path the volume will be mounted at, useful when using different MongoDB&reg; images.",
                            "default": "/bitnami/mongodb"
                        },
                        "subPath": {
                            "type": "string",
                            "description": "Subdirectory of the volume to mount at (evaluated as a template)",
                            "default": ""
                        },
                        "storageClass": {
                            "type": "string",
                            "description": "Storage class of backing PVC",
                            "default": ""
                        },
                        "accessModes": {
                            "type": "array",
                            "description": "Use volume as ReadOnly or ReadWrite",
                            "default": [
                                "ReadWriteOnce"
                            ],
                            "items": {
                                "type": "string"
                            }
                        },
                        "size": {
                            "type": "string",
                            "description": "PersistentVolumeClaim size",
                            "default": "8Gi"
                        },
                        "annotations": {
                            "type": "object",
                            "description": "Additional volume annotations",
                            "default": {}
                        },
                        "resourcePolicy": {
                            "type": "string",
                            "description": "Setting it to \"keep\" to avoid removing PVCs during a helm delete operation. Leaving it empty will delete PVCs after the chart deleted",
                            "default": ""
                        }
                    }
                },
                "arbiter": {
                    "type": "object",
                    "properties": {
                        "replicaCount": {
                            "type": "number",
                            "description": "Number of arbiters in each shard replica set (the first node will be primary)",
                            "default": 0
                        },
                        "hostAliases": {
                            "type": "array",
                            "description": "Deployment pod host aliases",
                            "default": [],
                            "items": {}
                        },
                        "resources": {
                            "type": "object",
                            "description": "Configure pod resources",
                            "default": {}
                        },
                        "mongodbExtraFlags": {
                            "type": "array",
                            "description": "MongoDB&reg; additional command line flags",
                            "default": [],
                            "items": {}
                        },
                        "topologySpreadConstraints": {
                            "type": "array",
                            "description": "Topology Spread Constraints for pod assignment spread across your cluster among failure-domains. Evaluated as a template",
                            "default": [],
                            "items": {}
                        },
                        "priorityClassName": {
                            "type": "string",
                            "description": "Pod priority class name",
                            "default": ""
                        },
                        "podAffinityPreset": {
                            "type": "string",
                            "description": "Arbiter's Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": ""
                        },
                        "podAntiAffinityPreset": {
                            "type": "string",
                            "description": "Arbiter's Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                            "default": "soft"
                        },
                        "nodeAffinityPreset": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "Arbiter's Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`",
                                    "default": ""
                                },
                                "key": {
                                    "type": "string",
                                    "description": "Arbiter's Node label key to match Ignored if `affinity` is set.",
                                    "default": ""
                                },
                                "values": {
                                    "type": "array",
                                    "description": "Arbiter's Node label values to match. Ignored if `affinity` is set.",
                                    "default": [],
                                    "items": {}
                                }
                            }
                        },
                        "affinity": {
                            "type": "object",
                            "description": "Arbiter's Affinity for pod assignment",
                            "default": {}
                        },
                        "nodeSelector": {
                            "type": "object",
                            "description": "Arbiter's Node labels for pod assignment",
                            "default": {}
                        },
                        "tolerations": {
                            "type": "array",
                            "description": "Arbiter's Tolerations for pod assignment",
                            "default": [],
                            "items": {}
                        },
                        "podManagementPolicy": {
                            "type": "string",
                            "description": "Statefulset's pod management policy, allows parallel startup of pods",
                            "default": "OrderedReady"
                        },
                        "updateStrategy": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets",
                                    "default": "RollingUpdate"
                                }
                            }
                        },
                        "config": {
                            "type": "string",
                            "description": "MongoDB&reg; configuration file",
                            "default": ""
                        },
                        "configCM": {
                            "type": "string",
                            "description": "ConfigMap name with MongoDB&reg; configuration file (cannot be used with shardsvr.arbiter.config)",
                            "default": ""
                        },
                        "extraEnvVars": {
                            "type": "array",
                            "description": "An array to add extra env vars",
                            "default": [],
                            "items": {}
                        },
                        "extraEnvVarsCM": {
                            "type": "string",
                            "description": "Name of a ConfigMap containing extra env vars",
                            "default": ""
                        },
                        "extraEnvVarsSecret": {
                            "type": "string",
                            "description": "Name of a Secret containing extra env vars",
                            "default": ""
                        },
                        "sidecars": {
                            "type": "array",
                            "description": "Add sidecars to the pod",
                            "default": [],
                            "items": {}
                        },
                        "initContainers": {
                            "type": "array",
                            "description": "Add init containers to the pod",
                            "default": [],
                            "items": {}
                        },
                        "podAnnotations": {
                            "type": "object",
                            "description": "Additional pod annotations",
                            "default": {}
                        },
                        "podLabels": {
                            "type": "object",
                            "description": "Additional pod labels",
                            "default": {}
                        },
                        "extraVolumes": {
                            "type": "array",
                            "description": "Array to add extra volumes",
                            "default": [],
                            "items": {}
                        },
                        "extraVolumeMounts": {
                            "type": "array",
                            "description": "Array to add extra mounts (normally used with extraVolumes)",
                            "default": [],
                            "items": {}
                        },
                        "schedulerName": {
                            "type": "string",
                            "description": "Use an alternate scheduler, e.g. \"stork\".",
                            "default": ""
                        },
                        "serviceAccount": {
                            "type": "object",
                            "properties": {
                                "create": {
                                    "type": "boolean",
                                    "description": "Specifies whether a ServiceAccount should be created for shardsvr arbiter nodes",
                                    "default": false
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Name of a Service Account to be used by shardsvr arbiter pods",
                                    "default": ""
                                },
                                "annotations": {
                                    "type": "object",
                                    "description": "Additional Service Account annotations (evaluated as a template)",
                                    "default": {}
                                },
                                "automountServiceAccountToken": {
                                    "type": "boolean",
                                    "description": "Automount service account token for the server service account",
                                    "default": true
                                }
                            }
                        },
                        "podSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable security context",
                                    "default": true
                                },
                                "fsGroup": {
                                    "type": "number",
                                    "description": "Group ID for the container",
                                    "default": 1001
                                }
                            }
                        },
                        "containerSecurityContext": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enabled containers' Security Context",
                                    "default": true
                                },
                                "runAsUser": {
                                    "type": "number",
                                    "description": "Set containers' Security Context runAsUser",
                                    "default": 1001
                                },
                                "runAsNonRoot": {
                                    "type": "boolean",
                                    "description": "Set containers' Security Context runAsNonRoot",
                                    "default": true
                                },
                                "readOnlyRootFilesystem": {
                                    "type": "boolean",
                                    "description": "Set containers' Security Context runAsNonRoot",
                                    "default": false
                                }
                            }
                        },
                        "command": {
                            "type": "array",
                            "description": "Override default container command (useful when using custom images)",
                            "default": [],
                            "items": {}
                        },
                        "args": {
                            "type": "array",
                            "description": "Override default container args (useful when using custom images)",
                            "default": [],
                            "items": {}
                        },
                        "terminationGracePeriodSeconds": {
                            "type": "string",
                            "description": "Seconds Redmine pod needs to terminate gracefully",
                            "default": ""
                        },
                        "lifecycleHooks": {
                            "type": "object",
                            "description": "for the arbiter container(s) to automate configuration before or after startup",
                            "default": {}
                        },
                        "livenessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable livenessProbe",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for livenessProbe",
                                    "default": 60
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for livenessProbe",
                                    "default": 30
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for livenessProbe",
                                    "default": 20
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for livenessProbe",
                                    "default": 2
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for livenessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "readinessProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable readinessProbe",
                                    "default": true
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for readinessProbe",
                                    "default": 10
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for readinessProbe",
                                    "default": 30
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for readinessProbe",
                                    "default": 20
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for readinessProbe",
                                    "default": 6
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for readinessProbe",
                                    "default": 1
                                }
                            }
                        },
                        "startupProbe": {
                            "type": "object",
                            "properties": {
                                "enabled": {
                                    "type": "boolean",
                                    "description": "Enable startupProbe",
                                    "default": false
                                },
                                "initialDelaySeconds": {
                                    "type": "number",
                                    "description": "Initial delay seconds for startupProbe",
                                    "default": 0
                                },
                                "periodSeconds": {
                                    "type": "number",
                                    "description": "Period seconds for startupProbe",
                                    "default": 10
                                },
                                "timeoutSeconds": {
                                    "type": "number",
                                    "description": "Timeout seconds for startupProbe",
                                    "default": 5
                                },
                                "failureThreshold": {
                                    "type": "number",
                                    "description": "Failure threshold for startupProbe",
                                    "default": 30
                                },
                                "successThreshold": {
                                    "type": "number",
                                    "description": "Success threshold for startupProbe",
                                    "default": 1
                                }
                            }
                        },
                        "customLivenessProbe": {
                            "type": "object",
                            "description": "Custom livenessProbe that overrides the default one",
                            "default": {}
                        },
                        "customReadinessProbe": {
                            "type": "object",
                            "description": "Custom readinessProbe that overrides the default one",
                            "default": {}
                        },
                        "customStartupProbe": {
                            "type": "object",
                            "description": "Custom startupProbe that overrides the default one",
                            "default": {}
                        }
                    }
                }
            }
        },
        "metrics": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Start a side-car prometheus exporter",
                    "default": false
                },
                "image": {
                    "type": "object",
                    "properties": {
                        "registry": {
                            "type": "string",
                            "description": "MongoDB&reg; exporter image registry",
                            "default": "docker.io"
                        },
                        "repository": {
                            "type": "string",
                            "description": "MongoDB&reg; exporter image name",
                            "default": "bitnami/mongodb-exporter"
                        },
                        "tag": {
                            "type": "string",
                            "description": "MongoDB&reg; exporter image tag",
                            "default": "0.39.0-debian-11-r79"
                        },
                        "digest": {
                            "type": "string",
                            "description": "MongoDB&reg; exporter image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag",
                            "default": ""
                        },
                        "pullPolicy": {
                            "type": "string",
                            "description": "MongoDB&reg; exporter image pull policy",
                            "default": "Always"
                        },
                        "pullSecrets": {
                            "type": "array",
                            "description": "MongoDB&reg; exporter image pull secrets",
                            "default": [],
                            "items": {}
                        }
                    }
                },
                "useTLS": {
                    "type": "boolean",
                    "description": "Whether to connect to MongoDB&reg; with TLS",
                    "default": false
                },
                "extraArgs": {
                    "type": "string",
                    "description": "String with extra arguments to the metrics exporter",
                    "default": ""
                },
                "resources": {
                    "type": "object",
                    "description": "Metrics exporter resource requests and limits",
                    "default": {}
                },
                "containerSecurityContext": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enabled containers' Security Context",
                            "default": true
                        },
                        "runAsUser": {
                            "type": "number",
                            "description": "Set containers' Security Context runAsUser",
                            "default": 1001
                        },
                        "runAsNonRoot": {
                            "type": "boolean",
                            "description": "Set containers' Security Context runAsNonRoot",
                            "default": true
                        },
                        "readOnlyRootFilesystem": {
                            "type": "boolean",
                            "description": "Set containers' Security Context runAsNonRoot",
                            "default": false
                        }
                    }
                },
                "livenessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable livenessProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for livenessProbe",
                            "default": 15
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for livenessProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for livenessProbe",
                            "default": 5
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for livenessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for livenessProbe",
                            "default": 1
                        }
                    }
                },
                "readinessProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable readinessProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for readinessProbe",
                            "default": 5
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for readinessProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for readinessProbe",
                            "default": 1
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for readinessProbe",
                            "default": 3
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for readinessProbe",
                            "default": 1
                        }
                    }
                },
                "startupProbe": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Enable startupProbe",
                            "default": false
                        },
                        "initialDelaySeconds": {
                            "type": "number",
                            "description": "Initial delay seconds for startupProbe",
                            "default": 0
                        },
                        "periodSeconds": {
                            "type": "number",
                            "description": "Period seconds for startupProbe",
                            "default": 5
                        },
                        "timeoutSeconds": {
                            "type": "number",
                            "description": "Timeout seconds for startupProbe",
                            "default": 2
                        },
                        "failureThreshold": {
                            "type": "number",
                            "description": "Failure threshold for startupProbe",
                            "default": 15
                        },
                        "successThreshold": {
                            "type": "number",
                            "description": "Success threshold for startupProbe",
                            "default": 1
                        }
                    }
                },
                "customLivenessProbe": {
                    "type": "object",
                    "description": "Custom livenessProbe that overrides the default one",
                    "default": {}
                },
                "customReadinessProbe": {
                    "type": "object",
                    "description": "Custom readinessProbe that overrides the default one",
                    "default": {}
                },
                "customStartupProbe": {
                    "type": "object",
                    "description": "Custom startupProbe that overrides the default one",
                    "default": {}
                },
                "containerPorts": {
                    "type": "object",
                    "properties": {
                        "metrics": {
                            "type": "number",
                            "description": "Port of the Prometheus metrics container",
                            "default": 9216
                        }
                    }
                },
                "podAnnotations": {
                    "type": "object",
                    "properties": {
                        "prometheus": {
                            "type": "object",
                            "properties": {
                                "io/scrape": {
                                    "type": "string",
                                    "description": "",
                                    "default": "true"
                                },
                                "io/port": {
                                    "type": "string",
                                    "description": "",
                                    "default": "{{ .Values.metrics.containerPort }}"
                                }
                            }
                        }
                    }
                },
                "podMonitor": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "description": "Create PodMonitor Resource for scraping metrics using PrometheusOperator",
                            "default": false
                        },
                        "namespace": {
                            "type": "string",
                            "description": "Namespace where podmonitor resource should be created",
                            "default": "monitoring"
                        },
                        "interval": {
                            "type": "string",
                            "description": "Specify the interval at which metrics should be scraped",
                            "default": "30s"
                        },
                        "scrapeTimeout": {
                            "type": "string",
                            "description": "Specify the timeout after which the scrape is ended",
                            "default": ""
                        },
                        "additionalLabels": {
                            "type": "object",
                            "description": "Additional labels that can be used so PodMonitors will be discovered by Prometheus",
                            "default": {}
                        }
                    }
                }
            }
        }
    }
}