---
name: "Archive artifact logs and data"
description: "Archive logs, pods and events"

runs:
  using: composite
  steps:
    - name: Archive artifact logs and data
      shell: bash
      run: |-
        set -exu;
        mkdir -p /tmp/artifacts/data/${STAGE}/kind-logs;
        kubectl get pods -A -o yaml > /tmp/artifacts/data/${STAGE}/kind-logs/all-pods.log;
        kubectl get events -A -o yaml > /tmp/artifacts/data/${STAGE}/kind-logs/all-events.log;
        kubectl get zenko -A -o yaml > /tmp/artifacts/data/${STAGE}/kind-logs/all-zenkos.log;
        kubectl get zenkodrsource -A -o yaml > /tmp/artifacts/data/${STAGE}/kind-logs/all-zenkodrsources.log;
        kubectl get zenkodrsink -A -o yaml > /tmp/artifacts/data/${STAGE}/kind-logs/all-zenkodrsinks.log;
        kind export logs /tmp/artifacts/data/${STAGE}/kind-logs/kind-export;
        tar zcvf /tmp/artifacts/${{ github.sha }}-${STAGE}-logs-volumes.tgz /tmp/artifacts/data/${STAGE}/kind-logs;
    - name: Dump kafka
      shell: bash
      continue-on-error: true
      run: |-
        set -exu

        NAMESPACE=${NAMESPACE:-default}
        KAFKA=$(kubectl get pods -n ${NAMESPACE} -lkafka_cr=${ZENKO_NAME:-end2end}-base-queue -o jsonpath='{.items[0].metadata.name}')

        kubectl exec -in ${NAMESPACE} ${KAFKA} -c kafka -- \
            env KAFKA_OPTS= kafka-topics.sh --bootstrap-server :9092 --list \
            > /tmp/artifacts/data/${STAGE}/kafka-topics.log

        kubectl exec -in ${NAMESPACE} ${KAFKA} -c kafka -- \
            env KAFKA_OPTS= kafka-consumer-groups.sh --bootstrap-server :9092 --list \
            > /tmp/artifacts/data/${STAGE}/kafka-consumer-groups.log

        kubectl exec -in ${NAMESPACE} ${KAFKA} -c kafka  -- \
                   env KAFKA_OPTS= kafka-consumer-groups.sh --bootstrap-server :9092 --describe --all-groups \
                   > /tmp/artifacts/data/${STAGE}/kafka-offsets.log

        KAFKA_SERVICE=$(kubectl get services -n ${NAMESPACE} -lkafka_cr=${ZENKO_NAME:-end2end}-base-queue -o jsonpath='{.items[0].metadata.name}')
        kubectl run -n ${NAMESPACE} kcat --image=edenhill/kcat:1.7.1 --restart=Never --command -- sleep 300        
        kubectl wait -n ${NAMESPACE} pod kcat --for=condition=ready
        cat /tmp/artifacts/data/${STAGE}/kafka-topics.log | grep -v '^__' | xargs -P 15 -I {} \
            sh -c "kubectl exec -i -n ${NAMESPACE} kcat -- \
                       kcat -L -b ${KAFKA_SERVICE} -t {}  -C -o beginning -e -q -J \
                       > /tmp/artifacts/data/${STAGE}/kafka-messages-{}.log"
    - name: Dump MongoDB
      shell: bash
      continue-on-error: true
      run: |-
        set -exu

        ZENKO_MONGODB_DATABASE="${ZENKO_MONGODB_DATABASE:-zenko-database}"
        MONGODB_ROOT_USERNAME="${MONGODB_ROOT_USERNAME:-root}"
        MONGODB_ROOT_PASSWORD="${MONGODB_ROOT_PASSWORD:-rootpass}"
        NAMESPACE="${NAMESPACE:-default}"
        DUMP_DIR="/tmp/mongodb.dump"

        kubectl exec -n ${NAMESPACE} data-db-mongodb-sharded-mongos-0 -- mongodump --db ${ZENKO_MONGODB_DATABASE} -u ${MONGODB_ROOT_USERNAME} -p ${MONGODB_ROOT_PASSWORD} --authenticationDatabase admin --out ${DUMP_DIR}

        kubectl exec -n ${NAMESPACE} data-db-mongodb-sharded-mongos-0 -- bash -c "for bson_file in ${DUMP_DIR}/${ZENKO_MONGODB_DATABASE}/*.bson; do json_file=\"${DUMP_DIR}/\$(basename \${bson_file} .bson).json\"; bsondump --outFile \${json_file} \${bson_file}; done"

        mkdir -p /tmp/artifacts/data/${STAGE}/mongodb-dump
        kubectl cp ${NAMESPACE}/data-db-mongodb-sharded-mongos-0:${DUMP_DIR} /tmp/artifacts/data/${STAGE}/mongodb-dump
