name: "Setup End2End environment"
description: "installation of dependencies"

runs:
  using: composite
  steps:
    - name: Cache deb packages
      id: cache-deb
      uses: actions/cache@v3
      with:
        path: ~/deb_cache
        key: ${{ runner.os }}-deb-${{ hashFiles('.github/actions/install-end2end-dependencies/action.yaml') }}
        restore-keys: |
          ${{ runner.os }}-deb-
    - name: Cache binaries
      id: cache-binaries
      uses: actions/cache@v3
      with:
        path: /usr/local/bin
        key: ${{ runner.os }}-binaries-${{ hashFiles('.github/actions/install-end2end-dependencies/action.yaml') }}
        restore-keys: |
          ${{ runner.os }}-binaries-
    - name: Install dependencies
      shell: bash
      run: |-
          function run_install_commands() {
            if [ -d "$HOME/deb_cache" ]; then
              sudo cp -R "$HOME/deb_cache/." /var/cache/apt/archives/
            fi
            
            sudo apt-get update
            sudo apt-get install -y \
              apt-transport-https \
              ca-certificates \
              curl \
              git \
              gnupg-agent \
              gnupg2 \
              software-properties-common \
              m4 \
              gettext-base \
              jq \
              wget
              
            if [ ! -d "$HOME/deb_cache" ]; then
              mkdir -p "$HOME/deb_cache"
              sudo cp -R /var/cache/apt/archives/*.deb "$HOME/deb_cache"
            fi
          }

          set -exu;
          if ! run_install_commands; then
            echo "Switching to archive.ubuntu.com"
            sudo sed -i 's/azure\.//' /etc/apt/sources.list
            run_install_commands
          fi
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io
          sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg
          sudo echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${{ env.KIND_VERSION }}/kind-linux-amd64
          sudo chmod +x ./kind
          sudo mv kind /usr/local/bin/
          sudo curl -sSL https://get.helm.sh/helm-${{ env.HELM_VERSION }}-linux-amd64.tar.gz | sudo tar -xvz
          sudo install linux-amd64/helm /usr/local/bin
          sudo rm -rf linux-amd64
          sudo wget https://github.com/mikefarah/yq/releases/download/${{ env.YQ_VERSION }}/${{ env.YQ_BINARY }} -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          sudo curl -sSL https://github.com/tilt-dev/tilt/releases/download/v${{ env.TILT_VERSION }}/tilt.${{ env.TILT_VERSION }}.linux.x86_64.tar.gz | sudo tar xzvf -
          sudo mv tilt /usr/local/bin
          sudo chmod +x /usr/local/bin/tilt
          sudo curl -sSL https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2F${{ env.KUSTOMIZE_VERSION }}/kustomize_${{ env.KUSTOMIZE_VERSION }}_linux_amd64.tar.gz | sudo tar -xvz
          sudo install kustomize /usr/local/bin
          sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://dl.k8s.io/apt/doc/apt-key.gpg
          echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
          sudo apt-get update -y
    - name: Kubectl tool installer
      uses: Azure/setup-kubectl@v3
      with:
        version: 'v${{ env.KUBECTL_VERSION }}'