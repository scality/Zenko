---
apiVersion: zenko.io/v1alpha1
kind: Zenko
metadata:
  name: ${ZENKO_NAME}
spec:
  version: ${ZENKO_VERSION_NAME}
  replicas: 1
  initialConfiguration:
    locations:
    - name: us-east-1
      type: location-file-v1
    s3API:
      endpoints:
      - hostname: s3.zenko.local
        locationName: us-east-1
  mongodb:
    provider: KubeDB
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  redis:
    provider: KubeDB
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  kafka:
    provider: Managed
    jmxJarPath: /opt/jmx_exporter/jmx_prometheus_javaagent-0.14.0.jar
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  zookeeper:
    provider: Managed
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  localData:
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  vault:
    enable: true
    iamIngress:
      hostname: iam.zenko.local
    stsIngress:
      hostname: sts.zenko.local
  utapi:
    enable: false
  management:
    provider: InCluster
    ui:
      ingress:
        hostname: ui.zenko.local
      discovery:
        navbarBundleURL: '${NAVBAR_ENDPOINT}/shell/solution-ui-navbar.1.0.0.js'
    oidc:
      provider: '${OIDC_ENDPOINT}/auth/realms/${OIDC_REALM}'
      uiClientId: ${OIDC_CLIENT_ID}
      vaultClientId: ${OIDC_CLIENT_ID}
    api:
      ingress:
        hostname: management.zenko.local
      allowFrom:
      - 172.16.0.0/12
      - 10.0.0.0/8
  ingress:
    workloadPlaneClass: 'nginx'
    controlPlaneClass: 'nginx'
    ${ZENKO_INGRESS_ANNOTATIONS}
    ${ZENKO_INGRESS_CERTIFICATES}
  registry:
    imagePullSecretNames:
    - zenko-operator-image-pull
