version: "0.2"

branches:
  default:
    stage: "pre-merge"

models:
  - Git: &git_pull
      name: git pull
      repourl: "%(prop:git_reference)s"
      mode: full
      method: clobber
      retryFetch: true
      haltOnFailure: true
  - Upload: &upload_artifacts
      source: tests/artifacts
      urls:
        - "*"
  - env: &secrets_env # contains values used for test config
      AWS_GCP_BACKEND_ACCESS_KEY: '%(secret:aws_gcp_backend_access_key)s'
      AWS_GCP_BACKEND_ACCESS_KEY_2: '%(secret:aws_gcp_backend_access_key_2)s'
      AWS_GCP_BACKEND_SECRET_KEY: '%(secret:aws_gcp_backend_secret_key)s'
      AWS_GCP_BACKEND_SECRET_KEY_2: '%(secret:aws_gcp_backend_secret_key_2)s'
      AWS_S3_BACKBEAT_BUCKET_NAME: ci-zenko-aws-crr-target-bucket
      AWS_S3_BACKBEAT_SRC_BUCKET_NAME: ci-zenko-aws-crr-src-bucket
      AWS_S3_BACKEND_ACCESS_KEY: '%(secret:aws_s3_backend_access_key)s'
      AWS_S3_BACKEND_ACCESS_KEY_2: '%(secret:aws_s3_backend_access_key_2)s'
      AWS_S3_BACKEND_SECRET_KEY: '%(secret:aws_s3_backend_secret_key)s'
      AWS_S3_BACKEND_SECRET_KEY_2: '%(secret:aws_s3_backend_secret_key_2)s'
      AWS_S3_BUCKET_NAME: ci-zenko-aws-target-bucket
      AWS_S3_BUCKET_NAME_2: ci-zenko-aws-target-bucket-2
      AZURE_BACKBEAT_CONTAINER_NAME: ci-zenko-azure-crr-target-bucket
      AZURE_BACKBEAT_SRC_CONTAINER_NAME: ci-zenko-azure-crr-src-bucket
      AZURE_BACKEND_ACCESS_KEY: '%(secret:azure_backend_access_key)s'
      AZURE_BACKEND_ACCESS_KEY_2: '%(secret:azure_backend_access_key_2)s'
      AZURE_BACKEND_ACCOUNT_NAME: '%(secret:azure_backend_account_name)s'
      AZURE_BACKEND_ACCOUNT_NAME_2: '%(secret:azure_backend_account_name_2)s'
      AZURE_BACKEND_CONTAINER_NAME: ci-zenko-azure-target-bucket
      AZURE_BACKEND_CONTAINER_NAME_2: ci-zenko-azure-target-bucket-2
      AZURE_BACKEND_ENDPOINT: '%(secret:azure_backend_endpoint)s'
      AZURE_BACKEND_ENDPOINT_2: '%(secret:azure_backend_endpoint_2)s'
      GCP_BUCKET_NAME: ci-zenko-gcp-target-bucket
      GCP_BUCKET_NAME_2: ci-zenko-gcp-target-bucket-2
      GCP_CRR_BUCKET_NAME: ci-zenko-gcp-crr-target-bucket
      GCP_CRR_MPU_BUCKET_NAME: ci-zenko-gcp-crr-mpu-bucket
      GCP_CRR_SRC_BUCKET_NAME: ci-zenko-gcp-crr-src-bucket
      GCP_MPU_BUCKET_NAME: ci-zenko-gcp-mpu-bucket
      GCP_MPU_BUCKET_NAME_2: ci-zenko-gcp-mpu-bucket-2
      INSTALL_TIMEOUT: "400"
      MULTI_CRR_SRC_BUCKET: ci-zenko-multi-crr-src-bucket
      TRANSIENT_SRC_BUCKET: ci-zenko-transient-src-bucket
      ZENKO_ACCESS_KEY: HEYIMAACCESSKEY
      ZENKO_SECRET_KEY: loOkAtMEImASecRetKEy123=
      ZENKO_STORAGE_ACCOUNT_ACCESS_KEY: HEYIMAACCESSKEY
      ZENKO_STORAGE_ACCOUNT_SECRET_KEY: loOkAtMEImASecRetKEy123=
      AWS_S3_BACKEND_SOURCE_LOCATION: awsbackend
      AWS_S3_BACKEND_DESTINATION_LOCATION: awsbackendmismatch
      AZURE_BACKEND_DESTINATION_LOCATION: azurebackendmismatch
      GCP_BACKEND_DESTINATION_LOCATION: gcpbackendmismatch

  - env: &docker_env # contains values for build test images
      E2E_DOCKER_IMAGE_NAME: '%(secret:private_registry_url)s/zenko/zenko-e2e'
      BACKBEAT_DOCKER_IMAGE_NAME: '%(secret:private_registry_url)s/zenko/backbeat-e2e'

  - env: &k8s_env # containes values for running helm and kubectl
      ZENKO_HELM_RELEASE: 'zenko-test'
      ZENKO_K8S_NAMESPACE: '%(prop:testNamespace)s'
      TILLER_NAMESPACE: '%(prop:testNamespace)s'

  - env: &global_env # contains all env values
      <<: [*secrets_env, *docker_env, *k8s_env]

  - ShellCommand: &install_tiller
      name: install helm (tiller into kubernetes)
      command: >-
        helm init --wait
      haltOnFailure: true
      env:
        <<: *k8s_env
  - ShellCommand: &helm_repos
      name: Install needed helm repos
      command: |-
        helm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator
      haltOnFailure: true
      env:
        <<: *k8s_env
  - ShellCommand: &start_orbit_simulator
      name: Start orbit simulator
      command: >-
        git clone git@github.com:scality/orbit-simulator.git &&
        helm upgrade ciutil
        --install orbit-simulator/charts/orbit-simulator
        --set simulator.shim.cloudserver_release=$(echo ${ZENKO_HELM_RELEASE})
        --wait $(./ci_env.sh set)
      workdir: build/eve/workers
      haltOnFailure: true
      env:
        <<: [*k8s_env, *secrets_env]
  - ShellCommand: &helm_build_dep
      name: Retrieve dependency
      command: >-
         helm dep build charts/zenko
      haltOnFailure: true
      env:
        <<: *k8s_env
  - ShellCommand: &helm_lint
      name: Lint charts
      command: helm lint charts/*
      haltOnFailure: true
  - ShellCommand: &run_zenko_e2e
      name: Test zenko
      command: >-
        make DOCKER_IMAGE_NAME=$E2E_DOCKER_IMAGE_NAME
        DOCKER_IMAGE_TAG='%(prop:commit_short_revision)s' end2end
        || (echo "Tests have failed" ; kubectl get pods -L redis-role ; exit 1) >&2 
      workdir: build/tests
      env:
        <<: *global_env
  - ShellCommand: &dump_logs
      name: Dump logs
      command: make dump-logs
      workdir: build/tests
      env:
        <<: *k8s_env

stages:
  pre-merge:
    worker: &pod
      type: kube_pod
      path: eve/workers/zenko.yaml
    steps:
    - TriggerStages:
        name: trigger all the tests
        stage_names:
        - build-e2e
        - build-backbeat-e2e
        - test-zenko

  build-e2e:
    worker: *pod
    steps: &build_e2e
    - Git: *git_pull
    - ShellCommand: &private_registry_login
        name: Private Registry Login
        command: >
          docker login
          -u '%(secret:private_registry_username)s'
          -p '%(secret:private_registry_password)s'
          '%(secret:private_registry_url)s'
    - ShellCommand:
        name: build end2end image
        command: >-
          make DOCKER_IMAGE_NAME=$E2E_DOCKER_IMAGE_NAME
          DOCKER_IMAGE_TAG='%(prop:commit_short_revision)s' container-image
        workdir: build/tests
        env:
          <<: [*docker_env, *k8s_env]
    - ShellCommand:
        name: push end2end image
        command: >-
          make DOCKER_IMAGE_NAME=$E2E_DOCKER_IMAGE_NAME
          DOCKER_IMAGE_TAG='%(prop:commit_short_revision)s' container-push
        workdir: build/tests
        env:
          <<: [*docker_env, *k8s_env]

  build-backbeat-e2e:
    worker: *pod
    steps:
      - Git: *git_pull
      - ShellCommand: *private_registry_login
      # - ShellCommand:
      #     name: Insert GCP key
      #     command: >-
      #       cat '{"private_key": "%(secret:gcp_backend_service_key)s", "client_email": "$(secret:gcp_backend_service_email)s"}'
      - ShellCommand:
          name: build backbeat e2e image
          command: docker build -t "$BACKBEAT_DOCKER_IMAGE_NAME:%(prop:commit_short_revision)s" --no-cache .
          workdir: build/tests/backbeat
          env:
            <<: *docker_env
      - ShellCommand:
          name: push backbeat e2e image
          command: docker push "$BACKBEAT_DOCKER_IMAGE_NAME:%(prop:commit_short_revision)s"
          env:
            <<: *docker_env

  test-zenko:
    worker: &kube_cluster
      <<: *pod
      service:
        requests:
          version: "1.9.6"
        namespaces:
        - "testNamespace"    # <<< the default namespace for that stage
    steps:
    - ShellCommand: &fix_curl # Workaround, to be removed
        name: Install curl
        command: |-
          apk --update upgrade
          apk --update add curl
    - Git: *git_pull
    - ShellCommand: *install_tiller
    - ShellCommand:
        name: Instal base64
        command: apk --update add coreutils
    - ShellCommand: *helm_repos
    - ShellCommand: *start_orbit_simulator
    - ShellCommand: *helm_build_dep
    - ShellCommand: *helm_lint
    - ShellCommand:
        name: Install Zenko !
        command: >-
          helm upgrade $ZENKO_HELM_RELEASE --namespace %(prop:testNamespace)s
          --install charts/zenko
          -f eve/ci-values.yml
        haltOnFailure: true
        env:
          <<: *k8s_env
    - ShellCommand: *run_zenko_e2e
    - ShellCommand:
        name: Run backbeat crr tests
        command: >-
          kubectl run zenko-backbeat-e2e --image=$BACKBEAT_DOCKER_IMAGE_NAME:%(prop:commit_short_revision)s
          --rm --restart=Never --namespace $ZENKO_K8S_NAMESPACE --attach=True
          $(../eve/workers/ci_env.sh env)
          --env CLOUDSERVER_ENDPOINT="http://$ZENKO_HELM_RELEASE-cloudserver:80"
          -- npm run test_crr
        workdir: build/tests
        env:
          <<: *global_env
    - ShellCommand:
        name: Run backbeat api tests
        command: >-
          kubectl run zenko-backbeat-e2e --image=$BACKBEAT_DOCKER_IMAGE_NAME:%(prop:commit_short_revision)s
          --rm --restart=Never --namespace $ZENKO_K8S_NAMESPACE --attach=True
          $(../eve/workers/ci_env.sh env)
          --env CLOUDSERVER_ENDPOINT="http://$ZENKO_HELM_RELEASE-cloudserver:80"
          --env CLOUDSERVER_HOST="$ZENKO_HELM_RELEASE-cloudserver"
          -- npm run test_api
        workdir: build/tests
        env:
          <<: *global_env
    - ShellCommand: *dump_logs
    - Upload: *upload_artifacts

  latest:
    worker:
      type: local
    steps:
    - TriggerStages:
        name: trigger all the tests
        stage_names:
        - build-e2e
        - test-latest-components

  test-latest-components:
    worker: *kube_cluster
    steps:
      - ShellCommand: *fix_curl
      - Git: *git_pull
      - ShellCommand: *install_tiller
      - ShellCommand: *helm_repos
      - ShellCommand: *start_orbit_simulator
      - SetProperty:
          name: set cloudserver branch
          property: cloudserver_branch
          value: development/8.0
      - SetProperty:
          name: set backbeat branch
          property: backbeat_branch
          value: development/8.0
      - SetPropertyFromCommand:
          name: retrieve cloudserver latest sha1
          property: cloudserver_sha1
          command: >-
            git ls-remote git@github.com:scality/s3.git
            --branch '%(prop:cloudserver_branch)s' | cut -c1-7
      - SetPropertyFromCommand:
          name: retrieve backbeat latest sha1
          property: backbeat_sha1
          command: >-
            git ls-remote git@github.com:scality/backbeat.git
            --branch '%(prop:backbeat_branch)s' | cut -c1-7
      - ShellCommand: *helm_build_dep
      - ShellCommand: *helm_lint
      - ShellCommand:
          name: Install Latest Zenko !
          command: >-
            helm upgrade $ZENKO_HELM_RELEASE --namespace %(prop:testNamespace)s
            --install charts/zenko
            -f eve/ci-values.yml
            --set cloudserver.image.tag='%(prop:cloudserver_sha1)s'
            --set cloudserver.image.repository=%(secret:private_registry_url)s/zenko/cloudserver
            --set backbeat.image.tag='%(prop:backbeat_sha1)s'
            --set backbeat.image.repository=%(secret:private_registry_url)s/zenko/backbeat
            --set s3-data.image.tag='%(prop:cloudserver_sha1)s'
            --set s3-data.image.repository=%(secret:private_registry_url)s/zenko/cloudserver
          haltOnFailure: true
          env:
            <<: *k8s_env
      - ShellCommand: *run_zenko_e2e
      - ShellCommand: *dump_logs
      - Upload: *upload_artifacts
