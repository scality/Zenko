{{- if .Values.orbit.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "cloudserver.fullname" . }}-manager
  labels:
    app: {{ template "cloudserver.name" . }}
    chart: {{ template "cloudserver.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cloudserver.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        {{- if .Values.proxy.https }}
        checksum/config: {{ include (print $.Template.BasePath "/certificate.yaml") . | sha256sum }}
        {{- end }}
      labels:
        app: {{ template "cloudserver.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: manager
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8000
{{ include "cloudserver.env" . | indent 10 }}
            - name: MANAGEMENT_MODE
              value: "{{- .Values.orbit.managerMode -}}"
            {{- range $key, $value := .Values.env }}
            - name: {{ $key | upper | replace "." "_" }}
              value: {{ $value | quote }}
            {{- end }}
          args: ['npm', 'run', 'start_s3server']
          livenessProbe:
            httpGet:
              path: /_/healthcheck
              port: http
          volumeMounts:
            {{- if .Values.proxy.caCert }}
            - name: proxy-cert
              mountPath: "/ssl"
              readOnly: true
            {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        {{- if .Values.proxy.caCert }}
        - name: proxy-cert
          secret:
            secretName: {{ template "cloudserver.fullname" . }}-proxy
        {{- end }}
{{- end}}