# Variables which should be replaced. Similar to grafana dashboards' __inputs section
x-inputs:
  - name: namespace
    type: constant
    value: zenko
  - name: service
    type: constant
    value: data-db-mongodb-sharded # `mongodb` when not sharded
  - name: pvc
    type: constant
    value: datadir-data-db-mongodb # `datadir-mongodb` when not sharded
  - name: tooManyElectionsWarningThreshold
    type: config
    value: 10
  - name: tooManyClientConnectionsWarningThreshold
    type: config
    value: 100
  - name: remainingDiskSpaceWarningThreshold
    type: config
    value: 0.25
  - name: replicas
    type: config
    value: 3

groups:
- name: MongoDb
  rules:

  - alert: MongoDbDegraded
    expr: |
      label_replace(
        sum(up{namespace="${namespace}",pod=~"${service}.*"}) by(job) < ${replicas}
      , "job", "$1", "job", "(?:${namespace}/)?${service}-?(.*)")
    for: 30s
    labels:
      severity: warning
    annotations:
      description: >-
        Less than 100% of MongoDb {{ $labels.job }} instances are up and healthy:
        {{ $value }}/${replicas}.
      summary: MongoDb {{ $labels.job }} service degraded

  - alert: MongoDbCritical
    expr: |
      label_replace(
        sum(up{namespace="${namespace}",pod=~"${service}.*"}) by(job) < ${replicas} / 2
      , "job", "$1", "job", "(?:${namespace}/)?${service}-?(.*)")
    for: 30s
    labels:
      severity: critical
    annotations:
      description: >-
        Less than 50% of MongoDb {{ $labels.job }} instances are up and healthy:
        {{ $value }}/${replicas}.
      summary: MongoDb {{ $labels.job }} service critical

  - alert: NoPrimary
    expr: |
      absent_over_time(mongodb_rs_members_state{namespace="${namespace}",pod=~"${service}.*",member_state="PRIMARY"}[1m]) == 1
    for: 0m
    labels:
      severity: critical
    annotations:
      description: "MongoDb down"
      summary: MongoDb down

  - alert: UnhealthyMemberWarning
    expr: |
      group by(name, state) (mongodb_rs_members_health{namespace="${namespace}",pod=~"${service}.*"} != 1)
    for: 30s
    labels:
      severity: warning
    annotations:
      description: "Member {{ $labels.member_idx }} ({{ $labels.member_state }}) is not healthy"
      summary: Unhealthy MongoDb member

  - alert: TooManyElectionsWarning
    expr: |
      sum by(set) (changes(mongodb_rs_members_electionDate{namespace="${namespace}",pod=~"${service}.*"}[10m]))
        > ${tooManyElectionsWarningThreshold}
    for: 0s
    labels:
      severity: warning
    annotations:
      description: "Number of elections is greater than ${tooManyElectionsWarningThreshold} in 10m"
      summary: Too many elections

  - alert: ReplicationLagWarning
    expr: |
      max(mongodb_rs_members_optimeDate{namespace="${namespace}",pod=~"${service}.*",member_state="PRIMARY"}) -
        min(mongodb_rs_members_optimeDate{namespace="${namespace}",pod=~"${service}.*",member_state="SECONDARY"}) > 10
    for: 30s
    labels:
      severity: warning
    annotations:
      description: "Mongodb replication lag is more than 10s"
      summary: MongoDB replication lag

  - alert: TooManyClientConnectionsWarning
    expr: |
      sum(mongodb_ss_connections{namespace="${namespace}",pod=~"${service}.*",conn_type="current"})
        > ${tooManyClientConnectionsWarningThreshold}
    for: 2m
    labels:
      severity: warning
    annotations:
      description: "Too many client connections"
      summary: Too many MongoDB client connections

  - alert: RemainingDiskSpaceWarning
    expr: |
      kubelet_volume_stats_available_bytes{namespace="${namespace}",persistentvolumeclaim=~"${pvc}-.*"}
          / kubelet_volume_stats_capacity_bytes{namespace="${namespace}",persistentvolumeclaim=~"${pvc}-.*"}
        < ${remainingDiskSpaceWarningThreshold}
      and
        predict_linear(kubelet_volume_stats_available_bytes{namespace="${namespace}",persistentvolumeclaim=~"${pvc}-.*"}[6h], 4 * 24 * 3600) < 0
    for: 2m
    labels:
      severity: warning
    annotations:
      description: 'MongoDb has low disk space'
      summary: 'MongoDb has low disk space'
