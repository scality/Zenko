apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cosmos.pfsd.fullname" . }}
  labels:
    app: {{ template "cosmos.name" . }}
    chart: {{ template "cosmos.chart" . }}
    component: pfsd
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.pfsd.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "cosmos.name" . }}
      component: pfsd
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "cosmos.name" . }}
        component: pfsd
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.pfsd.image.repository }}:{{ .Values.pfsd.image.tag }}"
          imagePullPolicy: {{ .Values.pfsd.image.pullPolicy }}
          args: ['npm', 'run', 'start_pfsserver']
          ports:
            - name: pfs
              containerPort: 9992
              protocol: TCP
          env:
            - name: PFSD_READONLY
              value: {{ .Values.pfsd.readOnly | quote }}
            - name: PFSD_NOSYNC
              value: {{ .Values.pfsd.noSync | quote }}
            - name: PFSD_NOCACHE
              value: {{ .Values.pfsd.noCache | quote }}
            - name: PFSD_MOUNT_PATH
              value: /data
            - name: LISTEN_ADDR
              value: "0.0.0.0"
            - name: HEALTHCHECKS_ALLOWFROM
              value: "0.0.0.0/0"
          volumeMounts:
            - name: backend-storage
              mountPath: /data
          livenessProbe:
            tcpSocket:
              port: pfs
            initialDelaySeconds: 5
          readinessProbe:
            tcpSocket:
              port: pfs
            initialDelaySeconds: 5
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: backend-storage
{{- if not (eq .Values.backend.type "ftp") }}
          persistentVolumeClaim:
            claimName: {{ template "cosmos.fullname" . }}
{{- else }}
          emptyDir: {}
{{- end }}
