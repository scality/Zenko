apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "backbeat.fullname" . }}-replication-data-processor
  labels:
    app: {{ template "backbeat.name" . }}-replication
    chart: {{ template "backbeat.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ template "backbeat.replication.dataProcessor.replicaCount" . }}
  template:
    metadata:
      {{- if not .Values.global.orbit.enabled }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- end }}
      labels:
        app: {{ template "backbeat.name" . }}-replication
        release: {{ .Release.Name }}
    spec:
      {{- if not .Values.global.orbit.enabled }}
      initContainers:
        - name: backbeat-accounts
          image: "zenko/tools:latest"
          command:
            - "sh"
          args:
            - "-c"
            - |
              set -e
              set -x
              jq -s '. as [$ACCS, $KEYS] | $ACCS.accounts | map(.keys={ access: $KEYS[.name].access, secret: $KEYS[.name].secret} ) | { accounts: . }' /accounts/authdata.json /credentials/credentials.json > /data/authdata.json
          volumeMounts:
            - name: accounts
              mountPath: /accounts
            - name: credentials
              mountPath: /credentials
            - name: auth-config
              mountPath: /data
      {{- end }}
      containers:
        - name: replication-data-processor
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/usr/src/app/docker-entrypoint.sh"]
          args: ["npm", "run", "queue_processor"]
          env:
            - name: ZOOKEEPER_AUTO_CREATE_NAMESPACE
              value: "1"
            - name: ZOOKEEPER_CONNECTION_STRING
              value: "{{- printf "%s-zenko-quorum:2181" .Release.Name | trunc 63 | trimSuffix "-" -}}"
            - name: KAFKA_HOSTS
              value: "{{- printf "%s-zenko-queue:9092" .Release.Name | trunc 63 | trimSuffix "-" -}}"
            - name: LOG_LEVEL
              value: {{ .Values.logging.level }}
            - name: UV_THREADPOOL_SIZE
              value: "64"
            - name: EXTENSIONS_REPLICATION_SOURCE_S3_HOST
              value: "{{- printf "%s-cloudserver" .Release.Name | trunc 63 | trimSuffix "-" -}}"
            - name: EXTENSIONS_REPLICATION_SOURCE_S3_PORT
              value: "80"
            - name: EXTENSIONS_REPLICATION_DEST_BOOTSTRAPLIST
              value: "{{- printf "%s-cloudserver:80" .Release.Name | trunc 63 | trimSuffix "-" -}}"
            {{- if .Values.global.orbit.enabled }}
            - name: REMOTE_MANAGEMENT_DISABLE
              value: "0"
            - name: EXTENSIONS_REPLICATION_SOURCE_AUTH_TYPE
              value: service
            - name: EXTENSIONS_REPLICATION_SOURCE_AUTH_ACCOUNT
              value: service-replication
            - name: EXTENSIONS_REPLICATION_DEST_AUTH_TYPE
              value: service
            - name: EXTENSIONS_REPLICATION_DEST_AUTH_ACCOUNT
              value: service-replication
            {{ else }}
            - name: REMOTE_MANAGEMENT_DISABLE
              value: "1"
            - name: S3AUTH_CONFIG
              value: "/data/authdata.json"
            - name: EXTENSIONS_REPLICATION_SOURCE_AUTH_TYPE
              value: account
            - name: EXTENSIONS_REPLICATION_SOURCE_AUTH_ACCOUNT
              value: Replication
            - name: EXTENSIONS_REPLICATION_DEST_AUTH_TYPE
              value: account
            - name: EXTENSIONS_REPLICATION_DEST_AUTH_ACCOUNT
              value: Replication
            {{- if .Values.global.replicationEndpoints }}
            - name: EXTENSIONS_REPLICATION_DEST_BOOTSTRAPLIST_MORE
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-backbeat-configmap
                  key: bootstrapList
            {{- end }}
            {{- end }}
            - name: MONGODB_HOSTS
              value: "{{ template "backbeat.mongodb-hosts" . }}"
            - name: REDIS_SENTINELS
              value: "{{ template "backbeat.redis-hosts" . }}"
            - name: REDIS_HA_NAME
              value: "{{ .Values.redis.sentinel.name }}"
            # AWS_S3 retry config
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AWS_S3_RETRY_TIMEOUT_S
              value: "{{ .Values.replication.dataProcessor.retry.aws_s3.timeoutS }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AWS_S3_RETRY_MAX_RETRIES
              value: "{{ .Values.replication.dataProcessor.retry.aws_s3.maxRetries }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AWS_S3_RETRY_BACKOFF_MIN
              value: "{{ .Values.replication.dataProcessor.retry.aws_s3.backoff.min }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AWS_S3_RETRY_BACKOFF_MAX
              value: "{{ .Values.replication.dataProcessor.retry.aws_s3.backoff.max }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AWS_S3_RETRY_BACKOFF_JITTER
              value: "{{ .Values.replication.dataProcessor.retry.aws_s3.backoff.jitter }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AWS_S3_RETRY_BACKOFF_FACTOR
              value: "{{ .Values.replication.dataProcessor.retry.aws_s3.backoff.factor }}"
              # AZURE retry config
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AZURE_RETRY_TIMEOUT_S
              value: "{{ .Values.replication.dataProcessor.retry.azure.timeoutS }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AZURE_RETRY_MAX_RETRIES
              value: "{{ .Values.replication.dataProcessor.retry.azure.maxRetries }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AZURE_RETRY_BACKOFF_MIN
              value: "{{ .Values.replication.dataProcessor.retry.azure.backoff.min }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AZURE_RETRY_BACKOFF_MAX
              value: "{{ .Values.replication.dataProcessor.retry.azure.backoff.max }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AZURE_RETRY_BACKOFF_JITTER
              value: "{{ .Values.replication.dataProcessor.retry.azure.backoff.jitter }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_AZURE_RETRY_BACKOFF_FACTOR
              value: "{{ .Values.replication.dataProcessor.retry.azure.backoff.factor }}"
              # GCP retry config
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_GCP_RETRY_TIMEOUT_S
              value: "{{ .Values.replication.dataProcessor.retry.gcp.timeoutS }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_GCP_RETRY_MAX_RETRIES
              value: "{{ .Values.replication.dataProcessor.retry.gcp.maxRetries }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_GCP_RETRY_BACKOFF_MIN
              value: "{{ .Values.replication.dataProcessor.retry.gcp.backoff.min }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_GCP_RETRY_BACKOFF_MAX
              value: "{{ .Values.replication.dataProcessor.retry.gcp.backoff.max }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_GCP_RETRY_BACKOFF_JITTER
              value: "{{ .Values.replication.dataProcessor.retry.gcp.backoff.jitter }}"
            - name: EXTENSIONS_REPLICATION_QUEUE_PROCESSOR_GCP_RETRY_BACKOFF_FACTOR
              value: "{{ .Values.replication.dataProcessor.retry.gcp.backoff.factor }}"
          livenessProbe:
            httpGet:
              path: {{ .Values.health.path.liveness}}
              port: {{ .Values.health.port }}
          {{- if not .Values.global.orbit.enabled }}
          volumeMounts:
            - name: auth-config
              mountPath: /data
          {{- end}}
          resources:
{{ toYaml .Values.replication.dataProcessor.resources | indent 12 }}
    {{- with .Values.replication.dataProcessor.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.replication.dataProcessor.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.replication.dataProcessor.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        {{- if not .Values.global.orbit.enabled }}
        - name: auth-config
          emptyDir: {}
        - name: accounts
          configMap:
            name: {{ template "backbeat.fullname" . }}-configmap
        - name: credentials
          secret:
            secretName: {{ .Release.Name }}-service-secrets
        {{- end }}
