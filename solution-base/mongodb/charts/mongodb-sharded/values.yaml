## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass
##

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global storage class for dynamic provisioning
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""

## @section Common parameters
##

## @param nameOverride String to partially override mongodb.fullname template (will maintain the release name)
##
nameOverride: ""
## @param fullnameOverride String to fully override mongodb.fullname template
##
fullnameOverride: ""
## @param clusterDomain Kubernetes Cluster Domain
## ref: https://kubernetes.io/docs/tasks/administer-cluster/dns-custom-nameservers/#introduction
##
clusterDomain: cluster.local
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []

## Enable diagnostic mode in the deployment
##
diagnosticMode:
  ## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
  ##
  enabled: false
  ## @param diagnosticMode.command Command to override all containers in the deployment
  ##
  command:
    - sleep
  ## @param diagnosticMode.args Args to override all containers in the deployment
  ##
  args:
    - infinity

## @section MongoDB&reg; Sharded parameters
##

## Bitnami MongoDB&reg; Sharded image version
## ref: https://hub.docker.com/r/bitnami/mongodb-sharded/tags/
## @param image.registry MongoDB&reg; Sharded image registry
## @param image.repository MongoDB&reg; Sharded Image name
## @param image.tag MongoDB&reg; Sharded image tag (immutable tags are recommended)
## @param image.pullPolicy MongoDB&reg; Sharded image pull policy
## @param image.pullSecrets Specify docker-registry secret names as an array
## @param image.debug Specify if debug logs should be enabled
##
image:
  registry: docker.io
  repository: bitnami/mongodb-sharded
  tag: 4.4.11-debian-10-r0
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: https://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  ## Set to true if you would like to see extra information on logs
  ##
  debug: false
## MongoDB&reg; credentials
## @param mongodbRootPassword MongoDB&reg; root password
## If set to null it will be randomly generated
## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#setting-the-root-password-on-first-run
## e.g:
## mongodbRootPassword: password
##
mongodbRootPassword: ""
## @param replicaSetKey Replica Set key (shared for shards and config servers)
## e.g:
## replicaSetKey: testkey123
##
replicaSetKey: ""
## @param existingSecret Existing secret with MongoDB&reg; credentials
## e.g:
## existingSecret: name-of-existing-secret
##
existingSecret: ""
## @param usePasswordFile Mount credentials as files instead of using environment variables
##
usePasswordFile: false
## @param shards Number of shards to be created
## ref: https://docs.mongodb.com/manual/core/sharded-cluster-shards/
##
shards: 2
## Properties for all of the pods in the cluster (shards, config servers and mongos)
##
common:
  ## @param common.mongodbEnableNumactl Enable launch MongoDB instance prefixed with "numactl --interleave=all"
  ## ref: https://docs.mongodb.com/manual/administration/production-notes/#mongodb-and-numa-hardware
  ##
  mongodbEnableNumactl: false
  ## @param common.useHostnames Enable DNS hostnames in the replica set config
  ##
  useHostnames: true
  ## @param common.mongodbEnableIPv6 Switch to enable/disable IPv6 on MongoDB&reg;
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-ipv6
  ##
  mongodbEnableIPv6: false
  ## @param common.mongodbDirectoryPerDB Switch to enable/disable DirectoryPerDB on MongoDB&reg;
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb/blob/master/README.md#enabling/disabling-directoryperdb
  ##
  mongodbDirectoryPerDB: false
  ## @param common.mongodbSystemLogVerbosity MongoDB&reg; system log verbosity level
  ## ref: https://docs.mongodb.com/manual/reference/program/mongo/#cmdoption-mongo-ipv6
  ##
  mongodbSystemLogVerbosity: 0
  ## @param common.mongodbDisableSystemLog Whether to disable MongoDB&reg; system log or not
  ## ref: https://github.com/bitnami/bitnami-docker-mongodb#configuring-system-log-verbosity-level
  ##
  mongodbDisableSystemLog: false
  ## @param common.mongodbMaxWaitTimeout Maximum time (in seconds) for MongoDB&reg; nodes to wait for another MongoDB&reg; node to be ready
  ##
  mongodbMaxWaitTimeout: 120
  ## @param common.initScriptsCM Configmap with init scripts to execute
  ##
  initScriptsCM: ""
  ## @param common.initScriptsSecret Secret with init scripts to execute (for sensitive data)
  ##
  initScriptsSecret: ""
  ## @param common.extraEnvVars An array to add extra env vars
  ## For example:
  ## extraEnvVars:
  ##  - name: KIBANA_ELASTICSEARCH_URL
  ##    value: test
  ##
  extraEnvVars: []
  ## @param common.extraEnvVarsCM Name of a ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param common.extraEnvVarsSecret Name of a Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @param common.sidecars Add sidecars to the pod
  ## For example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param common.initContainers Add init containers to the pod
  ## For example:
  ## initcontainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##
  initContainers: []
  ## @param common.podAnnotations Additional pod annotations
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param common.podLabels Additional pod labels
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param common.extraVolumes Array to add extra volumes
  ##
  extraVolumes: []
  ## @param common.extraVolumeMounts Array to add extra mounts (normally used with extraVolumes)
  ##
  extraVolumeMounts: []
  ## @param common.containerPorts.mongo MongoDB container port
  ##
  containerPorts:
    mongo: 27017
  ## K8s Service Account.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param common.serviceAccount.create Whether to create a Service Account for all pods automatically
    ##
    create: false
    ## @param common.serviceAccount.name Name of a Service Account to be used by all Pods
    ## If not set and create is true, a name is generated using the XXX.fullname template
    ##
    name: ""

## Init containers parameters:
## volumePermissions: Change the owner and group of the persistent volume mountpoint to runAsUser:fsGroup values from the securityContext section.
##
volumePermissions:
  ## @param volumePermissions.enabled Enable init container that changes volume permissions in the data directory (for cases where the default k8s `runAsUser` and `fsUser` values do not work)
  ##
  enabled: false
  ## @param volumePermissions.image.registry Init container volume-permissions image registry
  ## @param volumePermissions.image.repository Init container volume-permissions image name
  ## @param volumePermissions.image.tag Init container volume-permissions image tag
  ## @param volumePermissions.image.pullPolicy Init container volume-permissions image pull policy
  ## @param volumePermissions.image.pullSecrets Init container volume-permissions image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/os-shell
    tag: 12-debian-12-r22
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param volumePermissions.resources Init container resource requests/limit
  ##
  resources: {}
## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## @param securityContext.enabled Enable security context
## @param securityContext.fsGroup Group ID for the container
## @param securityContext.runAsUser User ID for the container
## @param securityContext.runAsNonRoot Run containers as non-root users
##
securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
  runAsNonRoot: true
## Kubernetes service type
## ref: https://kubernetes.io/docs/concepts/services-networking/service/
##
service:
  ## @param service.name Specify an explicit service name
  ##
  name: ""
  ## @param service.annotations Additional service annotations (evaluate as a template)
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  annotations: {}
  ## @param service.type Service type
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ##
  type: ClusterIP
  ## @param service.externalTrafficPolicy External traffic policy
  ## Enable client source IP preservation
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  ##
  externalTrafficPolicy: Cluster
  ## @param service.port MongoDB&reg; service port
  ##
  port: 27017
  ## @param service.clusterIP Static clusterIP or None for headless services
  ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.16/#servicespec-v1-core
  ##
  clusterIP: ""
  ## @param service.nodePort Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePort: ""
  ## @param service.externalIPs External IP list to use with ClusterIP service type
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
  ##
  externalIPs: []
  ## @param service.loadBalancerIP Static IP Address to use for LoadBalancer service type
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
  ##
  loadBalancerIP: ""
  ## @param service.loadBalancerSourceRanges List of IP ranges allowed access to load balancer (if supported)
  ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
  ##
  loadBalancerSourceRanges: []
  ## @param service.extraPorts Extra ports to expose (normally used with the `sidecar` value)
  ##
  extraPorts: []
  ## @param service.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
  ## If "ClientIP", consecutive client requests will be directed to the same mongos Pod
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
  ##
  sessionAffinity: None
## Configure extra options for liveness probes
## This applies to all the MongoDB&reg; in the sharded cluster
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
## @param livenessProbe.enabled Enable livenessProbe
## @param livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
## @param livenessProbe.periodSeconds Period seconds for livenessProbe
## @param livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
## @param livenessProbe.failureThreshold Failure threshold for livenessProbe
## @param livenessProbe.successThreshold Success threshold for livenessProbe
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
## Configure extra options for readiness probe
## This applies to all the MongoDB&reg; in the sharded cluster
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
## @param readinessProbe.enabled Enable readinessProbe
## @param readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
## @param readinessProbe.periodSeconds Period seconds for readinessProbe
## @param readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
## @param readinessProbe.failureThreshold Failure threshold for readinessProbe
## @param readinessProbe.successThreshold Success threshold for readinessProbe
##
readinessProbe:
  enabled: true
  initialDelaySeconds: 60
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## @section Config Server parameters
##

## Config Server replica set properties
## ref: https://docs.mongodb.com/manual/core/sharded-cluster-config-servers/
##
configsvr:
  ## @param configsvr.replicas Number of nodes in the replica set (the first node will be primary)
  ##
  replicas: 1
  ## @param configsvr.resources Configure pod resources
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
  ## @param configsvr.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param configsvr.mongodbExtraFlags MongoDB&reg; additional command line flags
  ## Can be used to specify command line flags, for example:
  ## mongodbExtraFlags:
  ##  - "--wiredTigerCacheSizeGB=2"
  ##
  mongodbExtraFlags: []
  ## @param configsvr.priorityClassName Pod priority class name
  ## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## @param configsvr.podAffinityPreset Config Server Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param configsvr.podAntiAffinityPreset Config Server Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param configsvr.nodeAffinityPreset.type Config Server Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param configsvr.nodeAffinityPreset.key Config Server Node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param configsvr.nodeAffinityPreset.values Config Server Node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param configsvr.affinity Config Server Affinity for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: configsvr.podAffinityPreset, configsvr.podAntiAffinityPreset, and configsvr.nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param configsvr.nodeSelector Config Server Node labels for pod assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param configsvr.tolerations Config Server Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param configsvr.podManagementPolicy Statefulset's pod management policy, allows parallel startup of pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## @param configsvr.updateStrategy.type updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param configsvr.config MongoDB&reg; configuration file
  ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
  ##
  config: ""
  ## @param configsvr.configCM ConfigMap name with Config Server configuration file (cannot be used with configsvr.config)
  ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
  ##
  configCM: ""
  ## @param configsvr.extraEnvVars An array to add extra env vars
  ## For example:
  ## extraEnvVars:
  ##  - name: KIBANA_ELASTICSEARCH_URL
  ##    value: test
  ##
  extraEnvVars: []
  ## @param configsvr.extraEnvVarsCM Name of a ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param configsvr.extraEnvVarsSecret Name of a Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @param configsvr.sidecars Add sidecars to the pod
  ## For example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param configsvr.initContainers Add init containers to the pod
  ## For example:
  ## initcontainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##
  initContainers: []
  ## @param configsvr.podAnnotations Additional pod annotations
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param configsvr.podLabels Additional pod labels
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param configsvr.extraVolumes Array to add extra volumes. Requires setting `extraVolumeMounts`
  ##
  extraVolumes: []
  ## @param configsvr.extraVolumeMounts Array to add extra mounts (normally used with extraVolumes). Normally used with `extraVolumes`
  ##
  extraVolumeMounts: []
  ## @param configsvr.schedulerName Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## Pod disruption budget
  ##
  pdb:
    ## @param configsvr.pdb.enabled Enable pod disruption budget
    ##
    enabled: false
    ## @param configsvr.pdb.minAvailable Minimum number of available config pods allowed (`0` to disable)
    ##
    minAvailable: 0
    ## @param configsvr.pdb.maxUnavailable Maximum number of unavailable config pods allowed (`0` to disable)
    ##
    maxUnavailable: 1
  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param configsvr.persistence.enabled Use a PVC to persist data
    ##
    enabled: true
    ## @param configsvr.persistence.mountPath Path to mount the volume at
    ## MongoDB&reg; images.
    ##
    mountPath: /bitnami/mongodb
    ## @param configsvr.persistence.subPath Subdirectory of the volume to mount at
    ## Useful in dev environments and one PV for multiple services.
    ##
    subPath: ""
    ## @param configsvr.persistence.storageClass Storage class of backing PVC
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param configsvr.persistence.accessModes Use volume as ReadOnly or ReadWrite
    ##
    accessModes:
      - ReadWriteOnce
    ## @param configsvr.persistence.size PersistentVolumeClaim size
    ##
    size: 8Gi
    ## @param configsvr.persistence.annotations Persistent Volume annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}
  ## K8s Service Account.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param configsvr.serviceAccount.create Specifies whether a ServiceAccount should be created for Config Server
    ##
    create: false
    ## @param configsvr.serviceAccount.name Name of a Service Account to be used by Config Server
    ## If not set and create is true, a name is generated using the XXX.fullname template
    ##
    name: ""
  ## Use a external config server instead of deploying one
  ##
  external:
    ## @param configsvr.external.host Primary node of an external Config Server replicaset
    ##
    host: ""
    ## @param configsvr.external.rootPassword Root password of the external Config Server replicaset
    ##
    rootPassword: ""
    ## @param configsvr.external.replicasetName Replicaset name of an external Config Server
    ##
    replicasetName: ""
    ## @param configsvr.external.replicasetKey Replicaset key of an external Config Server
    ##
    replicasetKey: ""

## @section Mongos parameters
##

## Mongos properties
## ref: https://docs.mongodb.com/manual/reference/program/mongos/#bin.mongos
##
mongos:
  ## @param mongos.replicas Number of replicas
  ##
  replicas: 1
  ## @param mongos.resources Configure pod resources
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
  ## @param mongos.hostAliases Deployment pod host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param mongos.mongodbExtraFlags MongoDB&reg; additional command line flags
  ## Can be used to specify command line flags, for example:
  ## mongodbExtraFlags:
  ##  - "--wiredTigerCacheSizeGB=2"
  ##
  mongodbExtraFlags: []
  ## @param mongos.priorityClassName Pod priority class name
  ## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  priorityClassName: ""
  ## @param mongos.podAffinityPreset Mongos Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param mongos.podAntiAffinityPreset Mongos Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param mongos.nodeAffinityPreset.type Mongos Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param mongos.nodeAffinityPreset.key Mongos Node label key to match Ignored if `affinity` is set.
    ## E.g.
    ## key: "kubernetes.io/e2e-az-name"
    ##
    key: ""
    ## @param mongos.nodeAffinityPreset.values Mongos Node label values to match. Ignored if `affinity` is set.
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param mongos.affinity Mongos Affinity for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## Note: mongos.podAffinityPreset, mongos.podAntiAffinityPreset, and mongos.nodeAffinityPreset will be ignored when it's set
  ##
  affinity: {}
  ## @param mongos.nodeSelector Mongos Node labels for pod assignment
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}
  ## @param mongos.tolerations Mongos Tolerations for pod assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## @param mongos.podManagementPolicy Statefulsets pod management policy, allows parallel startup of pods
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## @param mongos.updateStrategy.type updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    type: RollingUpdate
  ## @param mongos.config MongoDB&reg; configuration file
  ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
  ##
  config: ""
  ## @param mongos.configCM ConfigMap name with MongoDB&reg; configuration file (cannot be used with mongos.config)
  ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
  ##
  configCM: ""
  ## @param mongos.extraEnvVars An array to add extra env vars
  ## For example:
  ## extraEnvVars:
  ##  - name: KIBANA_ELASTICSEARCH_URL
  ##    value: test
  ##
  extraEnvVars: []
  ## @param mongos.extraEnvVarsCM Name of a ConfigMap containing extra env vars
  ##
  extraEnvVarsCM: ""
  ## @param mongos.extraEnvVarsSecret Name of a Secret containing extra env vars
  ##
  extraEnvVarsSecret: ""
  ## @param mongos.sidecars Add sidecars to the pod
  ## For example:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## @param mongos.initContainers Add init containers to the pod
  ## For example:
  ## initcontainers:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##
  initContainers: []
  ## @param mongos.podAnnotations Additional pod annotations
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param mongos.podLabels Additional pod labels
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param mongos.extraVolumes Array to add extra volumes. Requires setting `extraVolumeMounts`
  ##
  extraVolumes: []
  ## @param mongos.extraVolumeMounts Array to add extra volume mounts. Normally used with `extraVolumes`.
  ##
  extraVolumeMounts: []
  ## @param mongos.schedulerName Use an alternate scheduler, e.g. "stork".
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param mongos.useStatefulSet Use StatefulSet instead of Deployment
  ##
  useStatefulSet: false
  ## When using a statefulset, you can enable one service per replica
  ## This is useful when exposing the mongos through load balancers to make sure clients
  ## connect to the same mongos and therefore can follow their cursors
  ##
  servicePerReplica:
    ## @param mongos.servicePerReplica.enabled Create one service per mongos replica (must be used with statefulset)
    ##
    enabled: false
    ## @param mongos.servicePerReplica.annotations Additional service annotations (evaluate as a template)
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}
    ## @param mongos.servicePerReplica.type Service type
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    ##
    type: ClusterIP
    ## @param mongos.servicePerReplica.externalTrafficPolicy External traffic policy
    ## Enable client source IP preservation
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
    ##
    externalTrafficPolicy: Cluster
    ## @param mongos.servicePerReplica.port MongoDB&reg; service port
    ##
    port: 27017
    ## @param mongos.servicePerReplica.clusterIP Static clusterIP or None for headless services
    ## ref: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.16/#servicespec-v1-core
    ##
    clusterIP: ""
    ## @param mongos.servicePerReplica.nodePort Specify the nodePort value for the LoadBalancer and NodePort service types
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
    ##
    nodePort: ""
    ## @param mongos.servicePerReplica.externalIPs External IP list to use with ClusterIP service type
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips
    ##
    externalIPs: []
    ## @param mongos.servicePerReplica.loadBalancerIP Static IP Address to use for LoadBalancer service type
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer
    ##
    loadBalancerIP: ""
    ## @param mongos.servicePerReplica.loadBalancerSourceRanges List of IP ranges allowed access to load balancer (if supported)
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    loadBalancerSourceRanges: []
    ## @param mongos.servicePerReplica.extraPorts Extra ports to expose (normally used with the `sidecar` value)
    ##
    extraPorts: []
    ## @param mongos.servicePerReplica.sessionAffinity Session Affinity for Kubernetes service, can be "None" or "ClientIP"
    ## If "ClientIP", consecutive client requests will be directed to the same mongos Pod
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
    ##
    sessionAffinity: None
  ## Pod disruption budget
  ##
  pdb:
    ## @param mongos.pdb.enabled Enable pod disruption budget
    ##
    enabled: false
    ## @param mongos.pdb.minAvailable Minimum number of available mongo pods allowed (`0` to disable)
    ##
    minAvailable: 0
    ## @param mongos.pdb.maxUnavailable Maximum number of unavailable mongo pods allowed (`0` to disable)
    ##
    maxUnavailable: 1
  ## K8s Service Account.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
  ##
  serviceAccount:
    ## @param mongos.serviceAccount.create Whether to create a Service Account for mongos automatically
    ##
    create: false
    ## @param mongos.serviceAccount.name Name of a Service Account to be used by mongos
    ## If not set and create is true, a name is generated using the XXX.fullname template
    ##
    name: ""

## @section Shard configuration: Data node parameters
##

## Shard replica set properties
## ref: https://docs.mongodb.com/manual/replication/index.html
##
shardsvr:
  ## Properties for data nodes (primary and secondary)
  ##
  dataNode:
    ## @param shardsvr.dataNode.replicas Number of nodes in each shard replica set (the first node will be primary)
    ##
    replicas: 1
    ## @param shardsvr.dataNode.resources Configure pod resources
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
    ## @param shardsvr.dataNode.mongodbExtraFlags MongoDB&reg; additional command line flags
    ## Can be used to specify command line flags, for example:
    ## mongodbExtraFlags:
    ##  - "--wiredTigerCacheSizeGB=2"
    ##
    mongodbExtraFlags: []
    ## @param shardsvr.dataNode.priorityClassName Pod priority class name
    ## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""
    ## @param shardsvr.dataNode.podAffinityPreset Data nodes Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param shardsvr.dataNode.podAntiAffinityPreset Data nodes Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param shardsvr.dataNode.nodeAffinityPreset.type Data nodes Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param shardsvr.dataNode.nodeAffinityPreset.key Data nodes Node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## @param shardsvr.dataNode.nodeAffinityPreset.values Data nodes Node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param shardsvr.dataNode.affinity Data nodes Affinity for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## You can set dataNodeLoopId (or any other parameter) by setting the below code block under this 'affinity' section:
    ## affinity:
    ##   matchLabels:
    ##     shard: "{{ .dataNodeLoopId }}"
    ##
    ## Note: shardsvr.dataNode.podAffinityPreset, shardsvr.dataNode.podAntiAffinityPreset, and shardsvr.dataNode.nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}
    ## @param shardsvr.dataNode.nodeSelector Data nodes Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ## You can set dataNodeLoopId (or any other parameter) by setting the below code block under this 'nodeSelector' section:
    ## nodeSelector: { shardId: "{{ .dataNodeLoopId }}" }
    ##
    nodeSelector: {}
    ## @param shardsvr.dataNode.tolerations Data nodes Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ## You can set dataNodeLoopId (or any other parameter) by setting the below code block under this 'nodeSelector' section:
    ## tolerations:
    ## - key: "shardId"
    ##   operator: "Equal"
    ##   value: "{{ .dataNodeLoopId }}"
    ##   effect: "NoSchedule"
    ##
    tolerations: []
    ## @param shardsvr.dataNode.podManagementPolicy podManagementPolicy for the statefulset, allows parallel startup of pods
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
    ##
    podManagementPolicy: OrderedReady
    ## @param shardsvr.dataNode.updateStrategy.type updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      type: RollingUpdate
    ## @param shardsvr.dataNode.hostAliases Deployment pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param shardsvr.dataNode.config Entries for the MongoDB&reg; config file
    ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
    ##
    config: ""
    ## @param shardsvr.dataNode.configCM ConfigMap name with MongoDB&reg; configuration (cannot be used with shardsvr.dataNode.config)
    ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
    ##
    configCM: ""
    ## @param shardsvr.dataNode.extraEnvVars An array to add extra env vars
    ## For example:
    ## extraEnvVars:
    ##  - name: KIBANA_ELASTICSEARCH_URL
    ##    value: test
    ##
    extraEnvVars: []
    ## @param shardsvr.dataNode.extraEnvVarsCM Name of a ConfigMap containing extra env vars
    ##
    extraEnvVarsCM: ""
    ## @param shardsvr.dataNode.extraEnvVarsSecret Name of a Secret containing extra env vars
    ##
    extraEnvVarsSecret: ""
    ## @param shardsvr.dataNode.sidecars Attach additional containers (evaluated as a template)
    ## For example:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param shardsvr.dataNode.initContainers Add init containers to the pod
    ## For example:
    ## initcontainers:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##
    initContainers: []
    ## @param shardsvr.dataNode.podAnnotations Additional pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param shardsvr.dataNode.podLabels Additional pod labels
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param shardsvr.dataNode.extraVolumes Array to add extra volumes. Requires setting `extraVolumeMounts`
    ##
    extraVolumes: []
    ## @param shardsvr.dataNode.extraVolumeMounts Array to add extra mounts. Normally used with `extraVolumes`
    ##
    extraVolumeMounts: []
    ## @param shardsvr.dataNode.schedulerName Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## Pod disruption budget
    ##
    pdb:
      ## @param shardsvr.dataNode.pdb.enabled Enable pod disruption budget
      ##
      enabled: false
      ## @param shardsvr.dataNode.pdb.minAvailable Minimum number of available data pods allowed (`0` to disable)
      ##
      minAvailable: 0
      ## @param shardsvr.dataNode.pdb.maxUnavailable Maximum number of unavailable data pods allowed (`0` to disable)
      ##
      maxUnavailable: 1
    ## K8s Service Account.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    ##
    serviceAccount:
      ## @param shardsvr.dataNode.serviceAccount.create Specifies whether a ServiceAccount should be created for shardsvr
      ##
      create: false
      ## @param shardsvr.dataNode.serviceAccount.name Name of a Service Account to be used by shardsvr data pods
      ## If not set and create is true, a name is generated using the XXX.fullname template
      ##
      name: ""

  ## @section Shard configuration: Persistence parameters
  ##

  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  persistence:
    ## @param shardsvr.persistence.enabled Use a PVC to persist data
    ##
    enabled: true
    ## @param shardsvr.persistence.mountPath The path the volume will be mounted at, useful when using different MongoDB&reg; images.
    ##
    mountPath: /bitnami/mongodb
    ## @param shardsvr.persistence.subPath Subdirectory of the volume to mount at
    ## Useful in development environments and one PV for multiple services.
    ##
    subPath: ""
    ## @param shardsvr.persistence.storageClass Storage class of backing PVC
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: ""
    ## @param shardsvr.persistence.accessModes Use volume as ReadOnly or ReadWrite
    ##
    accessModes:
      - ReadWriteOnce
    ## @param shardsvr.persistence.size PersistentVolumeClaim size
    ##
    size: 8Gi
    ## @param shardsvr.persistence.annotations Additional volume annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    annotations: {}

  ## @section Shard configuration: Arbiter parameters
  ##

  ## Properties for arbiter nodes
  ## ref: https://docs.mongodb.com/manual/tutorial/add-replica-set-arbiter/
  ##
  arbiter:
    ## @param shardsvr.arbiter.replicas Number of arbiters in each shard replica set (the first node will be primary)
    ##
    replicas: 0
    ## @param shardsvr.arbiter.hostAliases Deployment pod host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param shardsvr.arbiter.resources Configure pod resources
    ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
    ## @param shardsvr.arbiter.mongodbExtraFlags MongoDB&reg; additional command line flags
    ## Can be used to specify command line flags, for example:
    ## mongodbExtraFlags:
    ##  - "--wiredTigerCacheSizeGB=2"
    ##
    mongodbExtraFlags: []
    ## @param shardsvr.arbiter.priorityClassName Pod priority class name
    ## https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
    ##
    priorityClassName: ""
    ## @param shardsvr.arbiter.podAffinityPreset Arbiter's Pod affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param shardsvr.arbiter.podAntiAffinityPreset Arbiter's Pod anti-affinity preset. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param shardsvr.arbiter.nodeAffinityPreset.type Arbiter's Node affinity preset type. Ignored if `affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param shardsvr.arbiter.nodeAffinityPreset.key Arbiter's Node label key to match Ignored if `affinity` is set.
      ## E.g.
      ## key: "kubernetes.io/e2e-az-name"
      ##
      key: ""
      ## @param shardsvr.arbiter.nodeAffinityPreset.values Arbiter's Node label values to match. Ignored if `affinity` is set.
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param shardsvr.arbiter.affinity Arbiter's Affinity for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## You can set arbiterLoopId (or any other parameter) by setting the below code block under this 'affinity' section:
    ## affinity:
    ##   matchLabels:
    ##     shard: "{{ .arbiterLoopId }}"
    ##
    ## Note: shardsvr.arbiter.podAffinityPreset, shardsvr.arbiter.podAntiAffinityPreset, and shardsvr.arbiter.nodeAffinityPreset will be ignored when it's set
    ##
    affinity: {}
    ## @param shardsvr.arbiter.nodeSelector Arbiter's Node labels for pod assignment
    ## ref: https://kubernetes.io/docs/user-guide/node-selection/
    ##
    nodeSelector: {}
    ## @param shardsvr.arbiter.tolerations Arbiter's Tolerations for pod assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## @param shardsvr.arbiter.podManagementPolicy Statefulset's pod management policy, allows parallel startup of pods
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
    ##
    podManagementPolicy: OrderedReady
    ## @param shardsvr.arbiter.updateStrategy.type updateStrategy for MongoDB&reg; Primary, Secondary and Arbiter statefulsets
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      type: RollingUpdate
    ## @param shardsvr.arbiter.config MongoDB&reg; configuration file
    ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
    ##
    config: ""
    ## @param shardsvr.arbiter.configCM ConfigMap name with MongoDB&reg; configuration file (cannot be used with shardsvr.arbiter.config)
    ## ref: http://docs.mongodb.org/manual/reference/configuration-options/
    ##
    configCM: ""
    ## @param shardsvr.arbiter.extraEnvVars An array to add extra env vars
    ## For example:
    ## extraEnvVars:
    ##  - name: KIBANA_ELASTICSEARCH_URL
    ##    value: test
    ##
    extraEnvVars: []
    ## @param shardsvr.arbiter.extraEnvVarsCM Name of a ConfigMap containing extra env vars
    ##
    extraEnvVarsCM: ""
    ## @param shardsvr.arbiter.extraEnvVarsSecret Name of a Secret containing extra env vars
    ##
    extraEnvVarsSecret: ""
    ## @param shardsvr.arbiter.sidecars Add sidecars to the pod
    ## For example:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## @param shardsvr.arbiter.initContainers Add init containers to the pod
    ## For example:
    ## initcontainers:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##
    initContainers: []
    ## @param shardsvr.arbiter.podAnnotations Additional pod annotations
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param shardsvr.arbiter.podLabels Additional pod labels
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param shardsvr.arbiter.extraVolumes Array to add extra volumes
    ##
    extraVolumes: []
    ## @param shardsvr.arbiter.extraVolumeMounts Array to add extra mounts (normally used with extraVolumes)
    ##
    extraVolumeMounts: []
    ## @param shardsvr.arbiter.schedulerName Use an alternate scheduler, e.g. "stork".
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## K8s Service Account.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    ##
    serviceAccount:
      ## @param shardsvr.arbiter.serviceAccount.create Specifies whether a ServiceAccount should be created for shardsvr arbiter nodes
      ##
      create: false
      ## @param shardsvr.arbiter.serviceAccount.name Name of a Service Account to be used by shardsvr arbiter pods
      ## If not set and create is true, a name is generated using the XXX.fullname template
      ##
      name: ""

## @section Metrics parameters
##

metrics:
  ## @param metrics.enabled Start a side-car prometheus exporter
  ##
  enabled: false
  ## @param metrics.image.registry MongoDB&reg; exporter image registry
  ## @param metrics.image.repository MongoDB&reg; exporter image name
  ## @param metrics.image.tag MongoDB&reg; exporter image tag
  ## @param metrics.image.pullPolicy MongoDB&reg; exporter image pull policy
  ## @param metrics.image.pullSecrets MongoDB&reg; exporter image pull secrets
  ##
  image:
    registry: docker.io
    repository: bitnami/mongodb-exporter
    tag: 0.34.0-debian-11-r24
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ## e.g:
    ## pullSecrets:
    ##   - myRegistryKeySecretName
    ##
    pullSecrets: []
  ## @param metrics.extraArgs String with extra arguments to the metrics exporter
  ## ref: https://github.com/dcu/mongodb_exporter/blob/master/mongodb_exporter.go
  ##
  ## We use "--compatible-mode" flag to export old metric: "mongodb_mongod_replset_oplog_head_timestamp"
  ## for mongoDB and backbeat dashboards.
  extraArgs: "--collector.diagnosticdata --collector.replicasetstatus --collector.dbstats --collector.topmetrics --compatible-mode"
  ## @param metrics.resources Metrics exporter resource requests and limits
  ## ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
  ## Metrics exporter liveness probe
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param metrics.livenessProbe.enabled Enable livenessProbe
  ## @param metrics.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param metrics.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param metrics.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param metrics.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param metrics.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: false
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  ## Metrics exporter liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes)
  ## @param metrics.readinessProbe.enabled Enable readinessProbe
  ## @param metrics.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param metrics.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param metrics.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param metrics.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param metrics.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: false
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    failureThreshold: 3
    successThreshold: 1
  ## @param metrics.containerPort Port of the Prometheus metrics container
  ##
  containerPort: 9216
  ## @param metrics.podAnnotations [object] Metrics exporter pod Annotation
  ##
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.metrics.containerPort }}"
  ## Prometheus Service Monitor
  ## ref: https://github.com/coreos/prometheus-operator
  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
  ##
  podMonitor:
    ## @param metrics.podMonitor.enabled Create PodMonitor Resource for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.podMonitor.namespace Namespace where podmonitor resource should be created
    ##
    namespace: monitoring
    ## @param metrics.podMonitor.interval Specify the interval at which metrics should be scraped
    ##
    interval: 30s
    ## @param metrics.podMonitor.scrapeTimeout Specify the timeout after which the scrape is ended
    ## e.g:
    ## scrapeTimeout: 30s
    ##
    scrapeTimeout: ""
    ## @param metrics.podMonitor.additionalLabels Additional labels that can be used so PodMonitors will be discovered by Prometheus
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#prometheusspec
    ##
    additionalLabels: {}
