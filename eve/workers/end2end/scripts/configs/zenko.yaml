---
apiVersion: zenko.io/v1alpha1
kind: Zenko
metadata:
  name: ${ZENKO_NAME}
spec:
  version: ${ZENKO_VERSION_NAME}
  replicas: 1
  initialConfiguration:
    locations:
    - name: us-east-1
      type: location-file-v1
    s3API:
      endpoints:
      - hostname: s3.zenko.local
        locationName: us-east-1
  mongodb:
    provider: KubeDB
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  redis:
    provider: KubeDB
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  kafka:
    provider: Managed
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  zookeeper:
    provider: Managed
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  localData:
    persistence:
      volumeClaimTemplate:
        size: 20Gi
        storageClassName: "standard"
  vault:
    enable: true
    iamIngress:
      hostname: iam.zenko.local
    stsIngress:
      hostname: sts.zenko.local
  utapi:
    enable: false
  management:
    provider: InCluster
    ui:
      ingress:
        hostname: ui.zenko.local
      discovery:
        navbarBundleURL: 'https://shell-ui.zenko.local/shell/solution-ui-navbar.1.0.0.js'
    oidc:
      provider: 'https://keycloak.zenko.local/auth/realms/${OIDC_REALM}'
      uiClientId: ${OIDC_CLIENT_ID}
      vaultClientId: ${OIDC_CLIENT_ID}
    api:
      ingress:
        hostname: management.zenko.local
      allowFrom:
      - 172.16.0.0/12
      - 10.0.0.0/8
  ingress:
    workloadPlaneClass: 'nginx'
    controlPlaneClass: 'nginx'
    annotations:
      nginx.ingress.kubernetes.io/proxy-body-size: 0m
      nginx.ingress.kubernetes.io/ssl-redirect: 'false'
    certificates:
    - hosts:
      - ui.zenko.local
      - management.zenko.local
      - iam.zenko.local
      - sts.zenko.local
  registry:
    imagePullSecretNames:
    - zenko-operator-image-pull
